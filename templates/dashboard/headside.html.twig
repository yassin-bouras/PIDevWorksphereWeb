<style>
    .notification-time {
        color: #0eaedf !important;
        /* Darker gray for better readability */
        font-weight: 600;
    }

    /* Style for unread notifications */
    .notification-message.unread {
        background-color: #adefef;
    }

    @keyframes pulse {
        0% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.1);
        }

        100% {
            transform: scale(1);
        }
    }

    /* Add a small badge for notification count */
    .badge-pill {
        background-color: #ff0000;
        color: white;
        position: absolute;
        top: -5px;
        right: -5px;
        font-size: 10px;
        width: 20px !important;
        /* Force fixed width */
        height: 20px !important;
        /* Force fixed height */
        border-radius: 50% !important;
        /* Force perfect circle */
        font-weight: 600;
        border: 2px solid #ffffff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);

        /* Fix text alignment */
        display: flex !important;
        align-items: center !important;
        justify-content: center !important;

        /* Override any other styles */
        padding: 0 !important;
        text-align: center !important;
        line-height: normal !important;
        box-sizing: border-box !important;
    }

    /* Special style for double-digit numbers */
    .badge-pill.double-digit {
        width: 24px !important;
        /* Slightly wider for double digits */
    }

    /* Sidebar loading overlay */
    /* More professional sidebar loading overlay */
    /* Improved sidebar loading overlay */
    #sidebar-loading-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(4px);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 999;
        transition: all 0.5s cubic-bezier(0.19, 1, 0.22, 1);
    }

    /* Refined professional sidebar with depth and dimension */
    .sidebar {
        background: linear-gradient(165deg, #f0f7ff 0%, #e6f2ff 100%);
        box-shadow: 0 3px 30px rgba(0, 0, 0, 0.08);
        border-right: none;
        transition: all 0.3s ease;
        overflow: hidden;
      
        position: fixed;
    }
    /* Add subtle pattern overlay for more texture */
    .sidebar::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%234771cb' fill-opacity='0.03'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
        opacity: 0.4;
        pointer-events: none;
    }
    
    /* Improved scrollbar for sidebar */
    .sidebar-inner.slimscroll::-webkit-scrollbar {
        width: 5px;
    }
    .sidebar-inner.slimscroll::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.3);
        border-radius: 10px;
    }
    /* Improved scrollbar colors for sidebar */
    .sidebar-inner.slimscroll::-webkit-scrollbar-thumb {
        background: rgba(71, 113, 203, 0.25);
        border-radius: 10px;
        border: 1px solid rgba(255, 255, 255, 0.3);
    }
    .sidebar-inner.slimscroll::-webkit-scrollbar-thumb:hover {
        background: rgba(71, 113, 203, 0.4);
    }
    /* Smooth pulsing animation for highlight items */
    @keyframes subtle-glow {
        0%, 100% { box-shadow: 0 4px 12px rgba(71, 113, 203, 0.1); }
        50% { box-shadow: 0 6px 15px rgba(71, 113, 203, 0.2); }
    }

    /* Refined menu items with glass effect */
    #sidebar-menu ul li a {
        padding: 11px 15px;
        color: #4a5568;
        font-weight: 500;
        font-size: 14px;
        border-radius: 8px;
        margin: 4px 10px;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.6);
        position: relative;
        display: flex;
        align-items: center;
        overflow: visible;
        white-space: nowrap;
        text-overflow: ellipsis;
        box-shadow: 0 1px 3px rgba(71, 113, 203, 0.1);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.4);
    }

    /* Premium hover effect with elevation */
    #sidebar-menu ul li a:hover {
        color: #3a5998;
        background: rgba(255, 255, 255, 0.8);
        transform: translateX(3px) translateY(-1px);
        box-shadow: 0 4px 12px rgba(71, 113, 203, 0.15);
        border: 1px solid rgba(71, 113, 203, 0.2);
    }

    /* Sophisticated active state with blue accent */
    #sidebar-menu ul li.active a {
        background: linear-gradient(135deg, rgba(71, 113, 203, 0.15), rgba(71, 113, 203, 0.05));
        color: #3a5998;
        font-weight: 600;
        border-left: 3px solid #4771cb;
        box-shadow: 0 4px 15px rgba(71, 113, 203, 0.15);
        border: 1px solid rgba(71, 113, 203, 0.2);
    }

    /* Enhanced icon styling with slight glow */
    #sidebar-menu ul li a span:first-child {
        font-size: 16px;
        margin-right: 12px;
        min-width: 22px;
        display: inline-block;
        text-align: center;
        transition: all 0.3s ease;
        position: relative;
        filter: drop-shadow(0 1px 2px rgba(71, 113, 203, 0.2));
    }
    .highlight-item a {
        animation: subtle-glow 3s infinite ease-in-out;
    }
    
    @keyframes pulse-dot {
        0% { transform: translateY(-50%) scale(0.8); opacity: 0.8; }
        50% { transform: translateY(-50%) scale(1.2); opacity: 1; }
        100% { transform: translateY(-50%) scale(0.8); opacity: 0.8; }
    }

    /* More refined menu category headers */
    .menu-category {
        padding: 12px 15px 4px;
        color: #4771cb;
        font-size: 10.5px;
        text-transform: uppercase;
        letter-spacing: 1.3px;
        font-weight: 700;
        margin-top: 15px;
        position: relative;
        overflow: hidden;
        display: flex;
        align-items: center;
    }
    /* Enhanced line after category with animated gradient */
    .menu-category:after {
        content: '';
        flex-grow: 1;
        height: 1px;
        margin-left: 10px;
        background: linear-gradient(90deg, 
            rgba(51, 204, 197, 0.7), 
            rgba(71, 113, 203, 0.5), 
            rgba(71, 113, 203, 0.1));
        transition: all 0.3s ease;
    }

    /* Elegant separators with shadow effect */
    .menu-separator {
        margin: 12px 15px;
        height: 1px;
        background: linear-gradient(90deg, 
            rgba(71, 113, 203, 0.2), 
            rgba(71, 113, 203, 0.05), 
            transparent);
        position: relative;
    }
    /* Menu separator shadow for depth */
    .menu-separator:after {
        content: '';
        position: absolute;
        left: 0;
        top: 1px;
        width: 100%;
        height: 1px;
        background: linear-gradient(90deg, 
            rgba(255, 255, 255, 0.7), 
            rgba(255, 255, 255, 0.5), 
            transparent);
    }

    /* Enhanced logout section with red accent */
    .sidebar-menu .logout {
        margin-top: 30px;
        padding-top: 10px;
        border-top: 1px solid rgba(71, 113, 203, 0.1);
    }

    .sidebar-menu .logout li a {
        background: linear-gradient(90deg, rgba(255, 77, 79, 0.03), transparent);
        color: #ff4d4f;
        font-weight: 500;
        transition: all 0.3s ease;
        border-radius: 8px;
    }

    .sidebar-menu .logout li a:hover {
        background: rgba(255, 77, 79, 0.08);
        transform: translateX(3px);
        box-shadow: 0 2px 8px rgba(255, 77, 79, 0.08);
    }
    /* Add subtle hover animation to icons */
    #sidebar-menu ul li a:hover span:first-child {
        transform: scale(1.1) translateY(-1px);
        filter: drop-shadow(0 2px 4px rgba(71, 113, 203, 0.3));
    }
    /* High-importance items - for special menu items */
    #sidebar-menu ul li.high-importance a {
        background: linear-gradient(90deg, rgba(255, 152, 0, 0.07), transparent);
        border-left: 3px solid #FF9800;
    }
    #sidebar-menu ul li.high-importance a:hover {
        background: linear-gradient(90deg, rgba(255, 152, 0, 0.1), rgba(255, 152, 0, 0.05));
        color: #FF9800;
    }

    /* Enhanced active menu item design */
    #sidebar-menu ul li.active a::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        box-shadow: inset 3px 0 0 rgba(71, 113, 203, 0.7);
        border-radius: 8px;
        z-index: 0;
    }

    /* Soft pulsing highlight for important menu items */
    @keyframes soft-pulse {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }

    .highlight-item {
        background: linear-gradient(90deg, rgba(71, 113, 203, 0.08), rgba(71, 113, 203, 0.03), rgba(71, 113, 203, 0.08));
        background-size: 200% 100%;
        animation: soft-pulse 3s ease infinite;
    }

    /* Modern pulse effect container */
    /* Premium container for loader */
    .sidebar-loader-container {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100px;
        height: 100px;
    }

    /* Professional gradient spinner */
    /* Enhanced gradient spinner with more polished look */
    .sidebar-spinner {
        width: 58px;
        height: 58px;
        border-radius: 50%;
        background: conic-gradient(from 0deg,
                transparent 0%,
                transparent 5%,
                rgba(51, 204, 197, 0.3) 5%,
                rgba(51, 204, 197, 1) 30%,
                rgba(71, 113, 203, 1) 70%,
                rgba(71, 113, 203, 0.3) 95%,
                transparent 95%);
        animation: sidebar-spin 1.2s linear infinite;
        box-shadow:
            0 6px 20px rgba(71, 113, 203, 0.2),
            0 2px 8px rgba(51, 204, 197, 0.1),
            inset 0 0 0 1px rgba(255, 255, 255, 0.1);
    }

    /* Inner circle for the spinner */
    /* Improved inner circle with subtle border */
    .sidebar-spinner::after {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 44px;
        height: 44px;
        border-radius: 50%;
        background-color: white;
        box-shadow: inset 0 0 8px rgba(51, 204, 197, 0.05);
        border: 1px solid rgba(71, 113, 203, 0.1);
    }

    /* WorkSphere logo in the center */
    /* Enhanced WorkSphere logo in center with better gradient */
    .sidebar-spinner::before {
        content: "W";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 20px;
        font-weight: 800;
        background: linear-gradient(135deg, #33ccc5, #4771cb);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        z-index: 2;
    }

    /* Outer pulsing circle */
    /* More sophisticated pulsing effect */
    .sidebar-pulse {
        position: absolute;
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: radial-gradient(circle,
                rgba(51, 204, 197, 0.2) 0%,
                rgba(71, 113, 203, 0.1) 50%,
                transparent 70%);
        animation: sidebar-pulse 2.5s ease-out infinite;
        opacity: 0.8;
    }

    /* Additional outer pulse for layered effect */
    .sidebar-pulse::after {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
        height: 100%;
        border-radius: 50%;
        background: radial-gradient(circle,
                rgba(71, 113, 203, 0.15) 0%,
                rgba(51, 204, 197, 0.05) 50%,
                transparent 70%);
        animation: sidebar-pulse 2.5s ease-out infinite 0.5s;
    }

    /* Loading text */
    /* Refined loading text with better typography */
    .sidebar-loading-text {
        margin-top: 20px;
        font-size: 15px;
        font-weight: 600;
        background: linear-gradient(90deg, #33ccc5, #4771cb);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        letter-spacing: 1px;
        opacity: 0.9;
        animation: text-fade 1.5s ease-in-out infinite alternate;
    }

    /* Animation for the spinner */
    /* Improved animations */
    @keyframes sidebar-spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    /* Animation for the pulse effect */
    @keyframes sidebar-pulse {
        0% {
            transform: scale(0.85);
            opacity: 0.8;
        }

        50% {
            opacity: 0.5;
        }

        100% {
            transform: scale(1.4);
            opacity: 0;
        }
    }

    @keyframes text-fade {
        0% {
            opacity: 0.7;
        }

        100% {
            opacity: 1;
        }
    }

    @keyframes shimmer {
        0% {
            background-position: -100% 0;
        }

        100% {
            background-position: 100% 0;
        }
    }

    /* Fade out animation */
    /* Enhanced fade-out with transform and opacity */
    .fade-out {
        opacity: 0;
        transform: translateY(-15px) scale(0.98);
        transition: all 0.6s cubic-bezier(0.19, 1, 0.22, 1);
    }

    /* Navbar elements loading animation */
    .navbar-item-loading {
        position: relative;
        overflow: hidden;
    }

    .navbar-item-loading::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 200%;
        height: 100%;
        background: linear-gradient(90deg,
                transparent 0%,
                rgba(51, 204, 197, 0.2) 50%,
                transparent 100%);
        animation: navbar-loading-shine 1.5s infinite;
    }

    @keyframes navbar-loading-shine {
        0% {
            left: -100%;
        }

        100% {
            left: 100%;
        }
    }

    /* Bell icon loading placeholder */
    /* Enhanced bell and user loading placeholders */
    .bell-loading-placeholder,
    .user-image-loading {
        position: relative;
        overflow: hidden;
        background: linear-gradient(90deg, #f0f0f0, #f8f8f8, #f0f0f0);
        background-size: 200% 100%;
        animation: shimmer 1.5s infinite;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    }

    .bell-loading-placeholder {
        width: 22px;
        height: 22px;
        border-radius: 50%;
        display: inline-block;
    }

    /* User image loading placeholder */
    .user-image-loading {
        width: 38px;
        height: 38px;
        border-radius: 50%;
    }

    /* User name loading placeholder */
    .user-name-loading {
        width: 80px;
        height: 16px;
        border-radius: 4px;
        background: linear-gradient(90deg, #f0f0f0, #f8f8f8, #f0f0f0);
        background-size: 200% 100%;
        animation: shimmer 1.5s infinite;
        display: inline-block;
        vertical-align: middle;
        margin-left: 8px;
    }
</style>
<!-- /*******************************************************************************/ -->
<div class="main-wrapper">
    <div class="header">
        <!-- To this -->
        <!-- Update the logo section for better sizing and alignment -->
        <div class="header-left">
            <a href="javascript:void(0);" class="logo">
                <div style="display: flex; align-items: center; height: 50px;">
                    <div
                        style="background: linear-gradient(135deg, #33ccc5, #4771cb); padding: 6px; border-radius: 8px; margin-right: 4px; margin-top: 6%; box-shadow: 0 3px 8px rgba(71, 113, 203, 0.2); display: flex; align-items: center; justify-content: center; width: 36px; height: 36px;">
                        <span style="color: white; font-weight: bold; font-size: 18px; letter-spacing: 1px;">W</span>
                    </div>
                    <h4
                        style="margin-top: 6%; font-size: 22px; font-weight: 750; background: linear-gradient(90deg, #33ccc5, #4771cb); -webkit-background-clip: text; -webkit-text-fill-color: transparent; letter-spacing: 0.5px;">
                        WorkSphere
                    </h4>
                </div>
            </a>
            <!-- Update the small logo to position the W higher -->
            <!-- Update the small logo to position the W higher -->
            <!-- Update the small logo to position both the box and W correctly -->
            <a href="javascript:void(0);" class="logo logo-small">
                <div
                    style="background: linear-gradient(135deg, #33ccc5, #4771cb); width: 32px; height: 32px; display: flex; align-items: center; justify-content: center; border-radius: 6px; box-shadow: 0 2px 5px rgba(71, 113, 203, 0.3); position: relative; margin-top: 15px;">
                    <span
                        style="color: white; font-weight: bold; font-size: 16px; letter-spacing: 1px; position: relative; top: 0px;">W</span>
                </div>
            </a>
            <!-- Add margin to create space between logo and toggle button -->
            <a href="javascript:void(0);" id="toggle_btn" style="margin-left: 11px;">
                <span class="bar-icon">
                    <span></span>
                    <span></span>
                    <span></span>
                </span>
            </a>
        </div>
        <div class="top-nav-search">
            <form>
                <input type="text" class="form-control" placeholder="Search...">
                <button class="btn" type="submit"><i class="fas fa-search"></i></button>
            </form>
        </div>
        <a class="mobile_btn" id="mobile_btn">
            <i class="fas fa-bars"></i>
        </a>
        <ul class="nav user-menu">
            <li class="nav-item dropdown" id="notification-dropdown">
                <!-- Find this section (around line 80-83) and update it -->
                <!-- Update the bell icon with better relative positioning for the badge -->
                <!-- Bell icon with loading state -->
                <a href="#" class="dropdown-toggle nav-link navbar-item-loading" data-toggle="dropdown"
                    style="position: relative;">
                    <div class="bell-loading-placeholder"></div>
                    <i data-feather="bell" style="width: 22px; height: 22px; display: none;"></i>
                    <span id="notification-badge"></span>
                </a>
                <div class="dropdown-menu notifications">
                    <div class="topnav-dropdown-header">
                        <span class="notification-title">Notifications</span>
                        <button id="clear-all-notifications" class="clear-noti"
                            style="background: none; border: none; cursor: pointer; color: #f62d51;">Clear All</button>
                    </div>
                    <div class="noti-content">
                        <ul class="notification-list">
                            <li class="notification-message">
                                <button class="btn btn-success" id="openWebSocketBtn">
                                    <i class="bi bi-broadcast"></i> Open Communication Port
                                </button>
                                <div class="media">
                                    <span class="avatar avatar-sm">
                                        <img class="avatar-img rounded-circle" alt="Photo de profil"
                                            src="{{ asset('back/img/profiles/avatar-02.jpg') }}">
                                    </span>
                                    <div class="media-body">
                                        <p class="noti-details">
                                            <span class="noti-title">Brian Johnson</span> paid the invoice <span
                                                class="noti-title">#DF65485</span>
                                        </p>
                                        <p class="noti-time">
                                            <span class="notification-time">4 mins ago</span>
                                        </p>
                                    </div>
                                </div>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="topnav-dropdown-footer">
                        <a href="{{ path('app_notification_index') }}" id="view-all-notifications-link">
                            <i class="fas fa-list"></i> Voir toutes les notifications
                            <span id="footer-unread-count" class="float-right"
                                style="color: #33ccc5; font-weight: bold;"></span>
                        </a>
                    </div>
                </div>
            </li>
            <!-- Modify the user profile section (around line 275) -->
            <li class="nav-item dropdown has-arrow main-drop" id="user-profile-dropdown">
                <!-- User profile with loading state -->
                <a href="#" class="dropdown-toggle nav-link navbar-item-loading" data-toggle="dropdown">
                    <span class="user-img">
                        <div class="user-image-loading"></div>
                        <img id="user-profile-image" src="{{ asset('back/img/profile.jpg') }}" alt="User Image"
                            style="display: none; width: 36px; height: 36px; object-fit: cover; border-radius: 50%;">
                        <span class="status online" style="display: none;"></span>
                    </span>
                    <span class="user-name-loading"></span>
                    <span id="user-full-name" style="display: none;">Guest</span>
                </a>
                <div class="dropdown-menu">
                    <a class="dropdown-item" href="#" id="user-profile-link">
                        <i data-feather="user" class="mr-1"></i> Profile
                    </a>
                    <a class="dropdown-item" href="#"><i data-feather="settings" class="mr-1"></i> Settings</a>
                </div>
            </li>
        </ul>
    </div>

    <!-- Modify the sidebar section to include the loading overlay -->
    <div class="sidebar" id="sidebar">
        <!-- Add loading overlay -->
        <!-- Replace your loading overlay HTML with this enhanced version -->
        <div id="sidebar-loading-overlay">
            <div class="sidebar-loader-container">
                <div class="sidebar-pulse"></div>
                <div class="sidebar-spinner"></div>
            </div>
            <div class="sidebar-loading-text">WorkSphere Dashboard ...</div>
        </div>
        <div class="sidebar-inner slimscroll">
            <div class="sidebar-contents">
                <div id="sidebar-menu" class="sidebar-menu">
                    <ul id="sidebar-links">
                        <!-- Sidebar links will be populated here -->
                    </ul>
                    
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('openWebSocketBtn').addEventListener('click', function () {
        window.location.href = '{{ path("admin_websocket_communication") }}';
    });

    document.addEventListener('DOMContentLoaded', function () {
        const sidebarLoadingOverlay = document.getElementById('sidebar-loading-overlay');
        const sidebarLinks = document.getElementById('sidebar-links');

        function hideSidebarLoading() {
            if (sidebarLoadingOverlay) {
                sidebarLoadingOverlay.classList.add('fade-out');
                setTimeout(() => {
                    sidebarLoadingOverlay.style.display = 'none';
                }, 300);
            }
        }
        // Function to hide loading and show actual content for navbar items
        function showNavbarItems() {
            // Bell icon
            const bellContainer = document.querySelector('#notification-dropdown .nav-link');
            const bellPlaceholder = document.querySelector('#notification-dropdown .bell-loading-placeholder');
            if (bellContainer && bellPlaceholder) {
                // Hide the placeholder
                bellPlaceholder.style.display = 'none';

                // Remove any existing bell icon that might be hidden
                const existingBellIcon = bellContainer.querySelector('[data-feather="bell"]');
                if (existingBellIcon) {
                    existingBellIcon.remove();
                }

                // Create a new bell icon element
                const bellIcon = document.createElement('i');
                bellIcon.setAttribute('data-feather', 'bell');
                bellIcon.style.width = '22px';
                bellIcon.style.height = '22px';

                // Find the badge element to insert before it
                const badgeElement = document.getElementById('notification-badge');
                if (badgeElement) {
                    bellContainer.insertBefore(bellIcon, badgeElement);
                } else {
                    bellContainer.appendChild(bellIcon);
                }

                // Remove loading class
                bellContainer.classList.remove('navbar-item-loading');

                // Initialize Feather icons
                if (typeof feather !== 'undefined') {
                    feather.replace();
                }
            }

            // User profile
            const userImage = document.getElementById('user-profile-image');
            const userImagePlaceholder = document.querySelector('.user-image-loading');
            const userName = document.getElementById('user-full-name');
            const userNamePlaceholder = document.querySelector('.user-name-loading');
            const userStatus = document.querySelector('.status.online');

            if (userImage && userImagePlaceholder) {
                userImagePlaceholder.style.display = 'none';
                userImage.style.display = 'inline-block';
                userStatus.style.display = 'block';
            }

            if (userName && userNamePlaceholder) {
                userNamePlaceholder.style.display = 'none';
                userName.style.display = 'inline-block';
                userName.parentElement.classList.remove('navbar-item-loading');
            }
        }
        function getCookie(name) {
            let cookieArray = document.cookie.split('; ');
            let cookie = cookieArray.find(row => row.startsWith(name + '='));
            return cookie ? cookie.split('=')[1] : null;
        }


        fetch('/jwt/user', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ token: getCookie('BEARER') }) // Get the token from cookies
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const user = data.user;

                        document.getElementById('user-profile-image').src =user.imageprofil  || '{{ asset("back/img/profile.jpg") }}';


                    // Set name and link
                    document.getElementById('user-full-name').textContent = user.nom + ' ' + user.prenom;
                    document.getElementById('user-profile-link').href = '/user/' + user.iduser;

                    // Ensure the path starts with a single /




                    /**********************************************************************************************************************
                                                    // Populate role-specific notifications
                                                    const notificationList = document.querySelector('.notification-list');
                                                    if (notificationList) {
                                                        if (user.role === 'Candidat') {
                                                            // Candidate-specific notifications
                                                            notificationList.innerHTML = `
                                                        <li class="notification-message">
                                                            <a href="/offre">
                                                                <div class="media">
                                                                    <span class="avatar avatar-sm">
                                                                        <img class="avatar-img rounded-circle" alt="Notification" src="{{ asset('back/img/profiles/jobs-icon.jpg') }}">
                                                                    </span>
                                                                    <div class="media-body">
                                                                        <p class="noti-details">
                                                                            <span class="noti-title">New job opportunities</span> are available
                                                                        </p>
                                                                        <p class="noti-time">
                                                                            <span class="notification-time">Just now</span>
                                                                        </p>
                                                                    </div>
                                                                </div>
                                                            </a>
                                                        </li>
                                                        <li class="notification-message">
                                                            <a href="#">
                                                                <div class="media">
                                                                    <span class="avatar avatar-sm">
                                                                        <img class="avatar-img rounded-circle" alt="Notification" src="{{ asset('back/img/profiles/interview-icon.jpg') }}">
                                                                    </span>
                                                                    <div class="media-body">
                                                                        <p class="noti-details">
                                                                            <span class="noti-title">Application status</span> updates available
                                                                        </p>
                                                                        <p class="noti-time">
                                                                            <span class="notification-time">2 days ago</span>
                                                                        </p>
                                                                    </div>
                                                                </div>
                                                            </a>
                                                        </li>
                                                    `;
                                                        }
                                                    }
                    /***********************************************************************************************/
                    // Add event listener for the Clear All button
                    const clearAllBtn = document.getElementById('clear-all-notifications');
                    if (clearAllBtn) {
                        clearAllBtn.addEventListener('click', function (e) {
                            e.preventDefault();

                            if (confirm('Are you sure you want to delete all notifications?')) {
                                clearAllNotifications();
                            }
                        });
                    }

                    function clearAllNotifications() {
                        fetch('/notification/api/clear-all', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                //'Authorization': 'Bearer ' + getCookie('BEARER')
                            }
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    // Clear the notifications list
                                    const notificationList = document.querySelector('.notification-list');
                                    if (notificationList) {
                                        notificationList.innerHTML = `
                            <li class="notification-message">
                                <div class="media">
                                    <div class="media-body">
                                        <p class="noti-details text-center">
                                            No notifications available
                                        </p>
                                    </div>
                                </div>
                            </li>
                        `;
                                    }

                                    // Clear the notification badge
                                    const badgeElement = document.querySelector('.nav-item.dropdown .badge');
                                    if (badgeElement) {
                                        badgeElement.textContent = '';
                                        badgeElement.classList.remove('badge-pill');
                                    }
                                } else {
                                    console.error('Error clearing notifications:', data.message);
                                    alert('Error clearing notifications: ' + data.message);
                                }
                            })
                            .catch(error => {
                                console.error('Error clearing notifications:', error);
                                alert('Error clearing notifications. Please try again.');
                            });
                    }
                    /***********************************************************************************************/
                    // Replace your notification fetching code (around line 253-308) with this:

                    // Fetch real notifications for the user
                    if (user.role === 'Candidat') {
                        fetch('/notification/api/user/' + user.iduser, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json',
                                'Authorization': 'Bearer ' + getCookie('BEARER')
                            }
                        })
                            .then(response => response.json())
                            .then(notificationData => {
                                const notificationList = document.querySelector('.notification-list');
                                const badgeElement = document.getElementById('notification-badge');

                                // IMPORTANT: Always reset the badge first
                                if (badgeElement) {
                                    badgeElement.textContent = '';
                                    badgeElement.className = ''; // Remove ALL classes
                                }

                                if (notificationList) {
                                    if (notificationData.notifications && notificationData.notifications.length > 0) {
                                        let notificationHtml = '';

                                        // Update notification count badge - only if there are unread notifications
                                        // In your notification data handling function:
                                        const unreadCount = notificationData.notifications.filter(n => !n.isRead).length;
                                        // Update the footer link with count
                                        const footerUnreadCount = document.getElementById('footer-unread-count');
                                        if (footerUnreadCount && unreadCount > 0) {
                                            footerUnreadCount.textContent = `(${unreadCount})`;
                                        } else if (footerUnreadCount) {
                                            footerUnreadCount.textContent = '';
                                        }
                                        if (badgeElement && unreadCount > 0) {
                                            badgeElement.textContent = unreadCount > 9 ? '9+' : unreadCount; // Limit displayed number
                                            badgeElement.className = 'badge badge-pill'; // Just these two classes

                                            // Add special class for double digit or "9+"
                                            if (unreadCount > 9) {
                                                badgeElement.classList.add('double-digit');
                                            }

                                            // Remove inline styles that might conflict
                                            badgeElement.style = '';
                                        }

                                        // Generate notification items
                                        notificationData.notifications.forEach(notification => {
                                            const date = new Date(notification.createdAt);
                                            const timeAgo = getTimeAgo(date);

                                            notificationHtml += `
                    <li class="notification-message ${notification.isRead ? '' : 'unread'}">
                        <a href="/notification/${notification.id}">
                            <div class="media">
                                <span class="avatar avatar-sm">
                                    <i class="fas fa-bell" style="font-size: 1.9em; color: #0eaedf;"></i>
                                </span>
                                <div class="media-body">
                                    <p class="noti-details">
                                        <span class="noti-title">${notification.message}</span>
                                    </p>
                                    <p class="noti-time">
                                        <span class="notification-time">${timeAgo}</span>
                                    </p>
                                </div>
                            </div>
                        </a>
                    </li>
                `;
                                        });

                                        notificationList.innerHTML = notificationHtml;
                                    } else {
                                        // No notifications - ensure badge is removed
                                        if (badgeElement) {
                                            badgeElement.textContent = '';
                                            badgeElement.classList.remove('badge-pill');
                                        }

                                        notificationList.innerHTML = `
                <li class="notification-message">
                    <div class="media">
                        <div class="media-body">
                            <p class="noti-details text-center">
                                No notifications available
                            </p>
                        </div>
                    </div>
                </li>
            `;
                                    }
                                }
                            })
                            .catch(error => {
                                console.error('Error fetching notifications:', error);
                            });
                    }

                    // Function to calculate time ago
                    function getTimeAgo(date) {
                        const seconds = Math.floor((new Date() - date) / 1000);

                        let interval = seconds / 31536000;
                        if (interval > 1) return Math.floor(interval) + " years ago";

                        interval = seconds / 2592000;
                        if (interval > 1) return Math.floor(interval) + " months ago";

                        interval = seconds / 86400;
                        if (interval > 1) return Math.floor(interval) + " days ago";

                        interval = seconds / 3600;
                        if (interval > 1) return Math.floor(interval) + " hours ago";

                        interval = seconds / 60;
                        if (interval > 1) return Math.floor(interval) + " minutes ago";

                        return "Just now";
                    }
                    /***********************************************************************************************/
                    const sidebarLinks = document.getElementById('sidebar-links');
                    sidebarLinks.innerHTML = '';

                    if (user.role === 'RH') {
                        sidebarLinks.innerHTML += `
                        <li class="active"><a href="/dashboard"><span>📊 Dashboard</span></a></li>
                        <li><a href="/user/${user.iduser}"><span>👤 Profile</span></a></li>
                        <li><a href="/sponsor"><span>🤝 Gestion Sponsor</span></a></li>
                        <li><a href="/user"><span>👥 Gestion User</span></a></li>
                        <li><a href="/evennement"><span>🎉 Evenements</span></a></li>
                        <li><a href="/formation"><span>🧑‍🏫 Formations</span></a></li>
                        <li><a href="/offre"><span>💼 Offres Emploi</span></a></li>
                        <li><a href="/cour"><span>🔍 Cours</span></a></li>
                        <li><a href="/entretien"><span>💬 Entretien</span></a></li>
                       <li><a href="/history"><span>📜 historique entretien</span></a></li>
                        <li><a href="/entretien/news"><span>📰 voir Last news</span></a></li>
                        

                        <div class="menu-separator"></div>
                        <div class="logout">
                            <li><a href="{{ path('app_logout') }}" title="Se déconnecter">
                                <span style="color: #ff4d4f;">🚪</span><span>Se déconnecter</span>
                            </a></li>
                        </div>
                    `;
                    } else if (user.role === 'Candidat') {
                        sidebarLinks.innerHTML += `
                            <div class="menu-category">Dashboard Principal</div>
                            <li class="highlight-item"><a href="/offre/front" title="Offres d'Emploi">
                            <span style="color: #4771cb;">💼</span> Offres d'Emploi
                            </a></li>
                             <li><a href="/candidature" title="Mes Candidatures">
                             <span style="color: #33ccc5;">🗳️</span> Mes Candidatures
                             </a></li>

                            <div class="menu-separator"></div>
                            <div class="menu-category">Communication</div>
                            <li><a href="/reclamation/user/${user.iduser}" title="Réclamations">
                            <span style="color: #f44336;">📄</span> Réclamations
                            </a></li>
                            <li><a href="{{ path('app_notification_index') }}" title="Notifications">
                            <span style="color: #ff9800;">🔔</span> Notifications
                            </a></li>

                            <div class="menu-separator"></div>
                            <div class="menu-category">Paramètres Compte</div>
                            <li><a href="/user/${user.iduser}" title="Mon Profil">
                            <span style="color: #536DFE;">👤</span> Mon Profil
                            </a></li>
                        
        
                            <div class="menu-separator"></div>
                            <div class="logout">
                            <li><a href="{{ path('app_logout') }}" title="Se déconnecter">
                            <span style="color: #ff4d4f;">🚪</span><span>Se déconnecter</span>
                            </a></li>
                            </div>
                    `;

                    } else if (user.role === 'Employe') {
                        sidebarLinks.innerHTML += `
                        <li class="active"><a href="/user/${user.iduser}"><span>👤 Profile</span></a></li>
                        <li><a href="/reclamation/user/${user.iduser}"><span>📄 Reclamation</span></a></li>
                        <li><a href="/entretien/employees"><span>🗃️ Entretien Archive</span></a></li>
                        <li><a href="/entretien/employee"><span>💬 Entretien</span></a></li>
                        <li><a href="/reservation"><span>🎯 Mes Reservations</span></a></li>
                        <li><a href="/formation/employe"><span>🧑‍🏫 Formation</span></a></li>
                        <li><a href="/tache/tache/mestaches"><span>📂 Projet</span></a></li>

                        <div class="menu-separator"></div>
                            <div class="logout">
                            <li><a href="{{ path('app_logout') }}" title="Se déconnecter">
                            <span style="color: #ff4d4f;">🚪</span><span>Se déconnecter</span>
                            </a></li>
                            </div>
                    `;
                    } else if (user.role === 'manager') {
                        sidebarLinks.innerHTML += `
                        <li class="active"><a href="/"><span>👤 Profile</span></a></li>
                        <li><a href="/"><span>⚙️ Settings</span></a></li>
                    `;
                    }
                    // Show navbar items after data is loaded
                    showNavbarItems();
                    // Hide the loading overlay after sidebar is populated
                    hideSidebarLoading();
                } else {
                    console.error('Failed to fetch user data:', data.error);
                    // Still hide loading even on error
                    showNavbarItems();
                    hideSidebarLoading();
                }
            })
            .catch(error => {
                console.error('Error fetching user data:', error);
                // Still hide loading on error
                showNavbarItems();
                hideSidebarLoading();
            });
    });
</script>