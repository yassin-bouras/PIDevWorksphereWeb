{% extends '/dashboard/base2.html.twig' %}

{% block title %}Comparaison CV - {{ offre.titre }}{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    /* Enterprise Design System Variables */
    :root {
        /* Core Color Palette */
        --primary-color: #33ccc5;
        --primary-dark: #2a9d8f;
        --primary-light: #a8e4e0;
        --primary-gradient: linear-gradient(135deg, #33ccc5, #1a7b75);
        --secondary-color: #4361ee;
        --secondary-dark: #3a56d4;
        --secondary-light: #c7d0ff;
        --secondary-gradient: linear-gradient(135deg, #4361ee, #3a56d4);
        --success-color: #10b981;
        --success-gradient: linear-gradient(135deg, #10b981, #059669);
        --danger-color: #ef4444;
        --danger-gradient: linear-gradient(135deg, #ef4444, #dc2626);
        --warning-color: #f59e0b;
        --info-color: #3b82f6;

        /* Text Colors */
        --text-dark: #1e293b;
        --text-medium: #475569;
        --text-light: #64748b;
        --text-muted: #94a3b8;

        /* Background Colors */
        --bg-white: #ffffff;
        --bg-light: #f8fafc;
        --bg-light-hover: #f1f5f9;
        --bg-accent: #ecfdf5;

        /* Shadow System */
        --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.05);
        --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.06), 0 2px 4px -1px rgba(0, 0, 0, 0.04);
        --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.08), 0 4px 6px -2px rgba(0, 0, 0, 0.04);
        --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.02);
        --shadow-inner: inset 0 2px 4px 0 rgba(0, 0, 0, 0.04);
        --shadow-focus: 0 0 0 3px rgba(51, 204, 197, 0.4);

        /* Border Radius */
        --radius-sm: 0.25rem;
        --radius-md: 0.5rem;
        --radius-lg: 0.75rem;
        --radius-xl: 1rem;
        --radius-2xl: 1.5rem;
        --radius-full: 9999px;

        /* Spacing */
        --space-1: 0.25rem;
        --space-2: 0.5rem;
        --space-3: 0.75rem;
        --space-4: 1rem;
        --space-5: 1.25rem;
        --space-6: 1.5rem;
        --space-8: 2rem;
        --space-10: 2.5rem;
        --space-12: 3rem;
        --space-16: 4rem;

        /* Animation */
        --animation-fast: 0.15s ease;
        --animation-base: 0.3s ease;
        --animation-slow: 0.5s ease;
        --animation-timing: cubic-bezier(0.16, 1, 0.3, 1);
        --animation-bounce: cubic-bezier(0.34, 1.56, 0.64, 1);

        /* Font System */
        --font-weight-normal: 400;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --font-weight-extrabold: 800;
    }

    /* Page Layout */
    .page-container {
        max-width: 1440px;
        margin: 0 auto;
        position: relative;
        z-index: 10;
    }

    /* Back button */
    .back-button {
        position: relative;
        background-color: var(--bg-white);
        color: var(--primary-color);
        border: none;
        border-radius: var(--radius-md);
        padding: var(--space-3) var(--space-5);
        font-weight: var(--font-weight-semibold);
        transition: all var(--animation-base) var(--animation-timing);
        display: inline-flex;
        align-items: center;
        margin-bottom: var(--space-4);
        box-shadow: var(--shadow-md);
        text-decoration: none;
        overflow: hidden;
    }

    .back-button:hover {
        background-color: var(--bg-light-hover);
        transform: translateX(-5px);
        box-shadow: var(--shadow-lg);
        color: var(--primary-dark);
        text-decoration: none;
    }

    .back-button:focus {
        outline: none;
        box-shadow: var(--shadow-focus);
    }

    .back-button::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 3px;
        background: var(--primary-gradient);
        transform: scaleX(0);
        transform-origin: left;
        transition: transform var(--animation-base) var(--animation-bounce);
    }

    .back-button:hover::after {
        transform: scaleX(1);
    }

    .back-button i {
        margin-right: var(--space-2);
        transition: transform var(--animation-base) var(--animation-timing);
    }

    .back-button:hover i {
        transform: translateX(-3px);
    }

    /* Main Card */
    .comparison-card {
        border: none;
        border-radius: var(--radius-xl);
        overflow: hidden;
        box-shadow: var(--shadow-xl);
        transition: all var(--animation-base) var(--animation-timing);
        transform: translateY(20px);
        opacity: 0;
        animation: fadeInUp 0.8s var(--animation-bounce) forwards;
    }

    @keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .comparison-card .card-header {
        background: var(--primary-gradient);
        color: white;
        padding: var(--space-5) var(--space-6);
        border: none;
        position: relative;
        overflow: hidden;
    }

    .comparison-card .card-header::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        background-image: url("data:image/svg+xml,%3Csvg width='52' height='26' viewBox='0 0 52 26' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Cpath d='M10 10c0-2.21-1.79-4-4-4-3.314 0-6-2.686-6-6h2c0 2.21 1.79 4 4 4 3.314 0 6 2.686 6 6 0 2.21 1.79 4 4 4 3.314 0 6 2.686 6 6 0 2.21 1.79 4 4 4v2c-3.314 0-6-2.686-6-6 0-2.21-1.79-4-4-4-3.314 0-6-2.686-6-6zm25.464-1.95l8.486 8.486-1.414 1.414-8.486-8.486 1.414-1.414z' /%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
        opacity: 0.3;
        z-index: 0;
    }

    .comparison-card .card-header h2 {
        font-weight: var(--font-weight-bold);
        margin: 0;
        position: relative;
        z-index: 1;
        text-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

    .comparison-card .card-body {
        padding: var(--space-6);
    }

    /* Component Cards */
    .component-card {
        border: none;
        border-radius: var(--radius-lg);
        overflow: hidden;
        box-shadow: var(--shadow-md);
        transition: all var(--animation-base) var(--animation-timing);
        height: 100%;
        transform: translateY(15px);
        opacity: 0;
        animation: fadeInComponent 0.5s var(--animation-bounce) forwards;
    }

    .component-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-lg);
    }

    @keyframes fadeInComponent {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Staggered animations for component cards */
    .component-card:nth-child(1) {
        animation-delay: 0.2s;
    }

    .component-card:nth-child(2) {
        animation-delay: 0.4s;
    }

    .component-card:nth-child(3) {
        animation-delay: 0.6s;
    }

    .component-card:nth-child(4) {
        animation-delay: 0.8s;
    }

    .component-card .card-header {
        padding: var(--space-4) var(--space-5);
        border: none;
        position: relative;
        overflow: hidden;
    }

    .component-card .card-header h3, 
    .component-card .card-header h4 {
        margin: 0;
        font-weight: var(--font-weight-bold);
        position: relative;
        z-index: 1;
    }

    .component-card .card-body {
        padding: var(--space-5);
    }

    /* Info card */
    .info-header {
        background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    }

    /* Success card */
    .success-header {
        background: var(--success-gradient);
    }

    /* Primary card */
    .primary-header {
        background: var(--primary-gradient);
    }

    /* Danger card */
    .danger-header {
        background: var(--danger-gradient);
    }

    /* Progress Bar */
    .progress {
        height: 30px;
        border-radius: var(--radius-lg);
        box-shadow: var(--shadow-inner);
        background-color: var(--bg-light);
        overflow: hidden;
        margin: var(--space-6) 0;
    }

    .progress-bar {
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: var(--font-weight-bold);
        font-size: 1rem;
        transition: width 1.5s var(--animation-timing);
        position: relative;
        overflow: hidden;
        border-radius: var(--radius-lg);
    }

    .progress-bar::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(90deg, 
                    rgba(255, 255, 255, 0) 0%, 
                    rgba(255, 255, 255, 0.15) 50%, 
                    rgba(255, 255, 255, 0) 100%);
        animation: progressShimmer 2s infinite;
    }

    @keyframes progressShimmer {
        0% {
            transform: translateX(-100%);
        }
        100% {
            transform: translateX(100%);
        }
    }

    /* List Items */
    .list-group-item {
        border-radius: var(--radius-md) !important;
        margin-bottom: var(--space-2);
        border: 1px solid rgba(0, 0, 0, 0.05);
        padding: var(--space-3) var(--space-4);
        display: flex;
        align-items: center;
        transition: all var(--animation-base);
        transform: translateX(-10px);
        opacity: 0;
        animation: slideInRight 0.5s var(--animation-bounce) forwards;
    }

    .list-group-item:hover {
        transform: translateX(5px);
        background-color: var(--bg-light-hover);
    }

    /* Staggered list item animations */
    .list-group-item:nth-child(1) { animation-delay: 0.1s; }
    .list-group-item:nth-child(2) { animation-delay: 0.2s; }
    .list-group-item:nth-child(3) { animation-delay: 0.3s; }
    .list-group-item:nth-child(4) { animation-delay: 0.4s; }
    .list-group-item:nth-child(5) { animation-delay: 0.5s; }
    .list-group-item:nth-child(6) { animation-delay: 0.6s; }

    @keyframes slideInRight {
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .list-group-item i {
        margin-right: var(--space-3);
        font-size: 1.1rem;
    }

    /* Alert styles */
    .summary-alert {
        border: none;
        border-radius: var(--radius-lg);
        padding: var(--space-5);
        box-shadow: var(--shadow-md);
        transition: all var(--animation-base);
        opacity: 0;
        transform: scale(0.95);
        animation: fadeScale 0.8s var(--animation-bounce) forwards;
        animation-delay: 1s;
    }

    @keyframes fadeScale {
        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .summary-alert strong {
        font-size: 1.1rem;
        display: block;
        margin-bottom: var(--space-2);
    }

    /* Document buttons */
    .document-btn {
        padding: var(--space-3) var(--space-5);
        border-radius: var(--radius-md);
        font-weight: var(--font-weight-semibold);
        transition: all var(--animation-base) var(--animation-timing);
        position: relative;
        overflow: hidden;
        border: 1px solid rgba(0, 0, 0, 0.1);
        display: inline-flex;
        align-items: center;
    }

    .document-btn:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-md);
    }

    .document-btn i {
        margin-right: var(--space-2);
        transition: transform var(--animation-base);
    }

    .document-btn:hover i {
        transform: translateY(-2px);
    }

    /* Tooltip System */
    [data-tooltip] {
        position: relative;
    }

    [data-tooltip]::before {
        content: attr(data-tooltip);
        position: absolute;
        top: -35px;
        left: 50%;
        transform: translateX(-50%) translateY(10px);
        background: var(--primary-gradient);
        color: white;
        padding: 6px 12px;
        border-radius: var(--radius-md);
        font-size: 12px;
        font-weight: var(--font-weight-medium);
        white-space: nowrap;
        pointer-events: none;
        opacity: 0;
        transition: all 0.3s var(--animation-timing);
        z-index: 100;
        box-shadow: var(--shadow-md);
    }

    [data-tooltip]::after {
        content: '';
        position: absolute;
        top: -12px;
        left: 50%;
        transform: translateX(-50%) translateY(10px);
        border-width: 6px;
        border-style: solid;
        border-color: var(--primary-dark) transparent transparent transparent;
        pointer-events: none;
        opacity: 0;
        transition: all 0.3s var(--animation-timing);
        z-index: 100;
    }

    [data-tooltip]:hover::before,
    [data-tooltip]:hover::after {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
        animation: tooltipPulse 2s infinite;
    }

    @keyframes tooltipPulse {
        0% {
            box-shadow: 0 5px 15px rgba(17, 46, 45, 0);
        }
        50% {
            box-shadow: 0 5px 15px rgba(16, 250, 238, 0.3);
        }
        100% {
            box-shadow: 0 5px 15px rgba(51, 204, 197, 0);
        }
    }

    /* Percentage circle for visualization */
    .percentage-circle {
        position: relative;
        width: 150px;
        height: 150px;
        margin: 0 auto var(--space-5);
        border-radius: 50%;
        background: conic-gradient(
            var(--primary-color) calc(var(--percentage) * 1%),
            #e2e8f0 0
        );
        box-shadow: var(--shadow-lg);
        transition: all 1s var(--animation-bounce);
        opacity: 0;
        transform: scale(0.8);
        animation: circleAppear 1s var(--animation-bounce) forwards;
        animation-delay: 0.5s;
    }

    @keyframes circleAppear {
        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .percentage-circle::before {
        content: '';
        position: absolute;
        top: 10px;
        left: 10px;
        right: 10px;
        bottom: 10px;
        background: white;
        border-radius: 50%;
        box-shadow: var(--shadow-inner);
    }

    .percentage-value {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        font-weight: var(--font-weight-bold);
        color: var(--text-dark);
    }

    .percentage-circle.high {
        background: conic-gradient(
            var(--success-color) calc(var(--percentage) * 1%),
            #e2e8f0 0
        );
    }

    .percentage-circle.medium {
        background: conic-gradient(
            var(--warning-color) calc(var(--percentage) * 1%),
            #e2e8f0 0
        );
    }

    .percentage-circle.low {
        background: conic-gradient(
            var(--danger-color) calc(var(--percentage) * 1%),
            #e2e8f0 0
        );
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
        .component-card {
            margin-bottom: var(--space-4);
        }
        .percentage-circle {
            width: 120px;
            height: 120px;
        }
    }
</style>
{% endblock %}

{% block content %}
<div class="container page-container" style="margin-top: -53%;">
    <a href="{{ path('app_offre_candidatures', {'id_offre': offre.id_offre}) }}" class="back-button" data-tooltip="Retourner aux candidatures">
        <i class="fas fa-arrow-left"></i> Retour aux candidatures
    </a>

    <div class="comparison-card card shadow-lg mb-5">
        <div class="card-header">
            <h2 class="mb-0 text-center">Comparaison CV - {{ offre.titre }}</h2>
        </div>
        <div class="card-body">
            <div class="row mb-5">
                <div class="col-md-6 mb-4 mb-md-0">
                    <div class="component-card card">
                        <div class="card-header info-header text-white">
                            <h3 class="mb-0"><i class="fas fa-briefcase me-2"></i> Offre d'emploi</h3>
                        </div>
                        <div class="card-body">
                            <h4 class="mb-3 text-primary">{{ offre.titre }}</h4>
                            <div class="mb-3">
                                <span class="badge bg-info text-white p-2 mb-2">{{ offre.typeContrat }}</span>
                            </div>
                            <h5 class="mb-2 text-secondary">Description</h5>
                            <p class="mb-4">{{ offre.description }}</p>
                            <h5 class="mb-2 text-secondary">Expériences requises</h5>
                            <p class="font-weight-medium">{{ offre.experience }}</p>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-6">
                    <div class="component-card card">
                        <div class="card-header success-header text-white">
                            <h3 class="mb-0"><i class="fas fa-file-alt me-2"></i> CV du candidat</h3>
                        </div>
                        <div class="card-body">
                            {% if cvPath %}
                                <div class="text-center mb-4">
                                    <img src="{{ asset('assets/images/cv-icon.png') }}" alt="CV Icon" class="mb-3" style="width: 64px; height: auto;">
                                    <p class="mb-4">Le CV du candidat est disponible pour analyse.</p>
                                    <a href="{{ asset('uploads/' ~ cvPath) }}" target="_blank" class="btn btn-outline-primary document-btn">
                                        <i class="fas fa-file-pdf"></i> Ouvrir le CV
                                    </a>
                                </div>
                            {% else %}
                                <div class="alert alert-warning">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    CV non disponible pour l'analyse
                                </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-5">
                <div class="col-md-12">
                    <div class="component-card card">
                        <div class="card-header primary-header text-white">
                            <h3 class="mb-0 text-center"><i class="fas fa-chart-pie me-2"></i> Résultats de la comparaison</h3>
                        </div>
                        <div class="card-body">
                            <div class="text-center mb-5">
                                <!-- Percentage circle visualization -->
                                <div class="percentage-circle {% if matchPercentage >= 80 %}high{% elseif matchPercentage >= 60 %}medium{% else %}low{% endif %}" style="--percentage: {{ matchPercentage }}">
                                    <div class="percentage-value">{{ matchPercentage }}%</div>
                                </div>
                                
                                <!-- Traditional progress bar (optional) -->
                                <div class="progress" style="height: 30px;">
                                    <div class="progress-bar {% if matchPercentage >= 80 %}bg-success{% elseif matchPercentage >= 60 %}bg-warning{% else %}bg-danger{% endif %}" 
                                         role="progressbar" 
                                         style="width: {{ matchPercentage }}%; color: white !important;" 
                                         aria-valuenow="{{ matchPercentage }}" 
                                         aria-valuemin="0" 
                                         aria-valuemax="100">
                                        {{ matchPercentage }}% de correspondance
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-4 mb-md-0">
                                    <div class="component-card card">
                                        <div class="card-header success-header text-white">
                                            <h4 class="mb-0"><i class="fas fa-check-circle me-2"></i> Compétences correspondantes</h4>
                                        </div>
                                        <div class="card-body">
                                            {% if matchedSkills is empty %}
                                                <p class="text-muted text-center py-3">Aucune compétence correspondante trouvée</p>
                                            {% else %}
                                                <ul class="list-group">
                                                    {% for skill in matchedSkills %}
                                                        <li class="list-group-item">
                                                            <i class="fas fa-check-circle text-success"></i> {{ skill }}
                                                        </li>
                                                    {% endfor %}
                                                </ul>
                                            {% endif %}
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="col-md-6">
                                    <div class="component-card card">
                                        <div class="card-header danger-header text-white">
                                            <h4 class="mb-0"><i class="fas fa-times-circle me-2"></i> Compétences manquantes</h4>
                                        </div>
                                        <div class="card-body">
                                            {% if missingSkills is empty %}
                                                <p class="text-muted text-center py-3"><i class="fas fa-thumbs-up me-2"></i> Toutes les compétences requises sont présentes</p>
                                            {% else %}
                                                <ul class="list-group">
                                                    {% for skill in missingSkills %}
                                                        <li class="list-group-item">
                                                            <i class="fas fa-times-circle text-danger"></i> {{ skill }}
                                                        </li>
                                                    {% endfor %}
                                                </ul>
                                            {% endif %}
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="mt-5">
                                <div class="summary-alert alert {% if matchPercentage >= 80 %}alert-success{% elseif matchPercentage >= 60 %}alert-warning{% else %}alert-danger{% endif %}">
                                    {% if matchPercentage >= 80 %}
                                        <strong><i class="fas fa-star me-2"></i> Excellente correspondance!</strong>
                                        <p>Ce candidat semble très bien correspondre à l'offre d'emploi. Le profil démontre une maîtrise des compétences requises pour ce poste, suggérant une forte compatibilité avec les exigences du poste.</p>
                                    {% elseif matchPercentage >= 60 %}
                                        <strong><i class="fas fa-thumbs-up me-2"></i> Bonne correspondance</strong>
                                        <p>Ce candidat possède plusieurs des compétences requises, mais certaines compétences clés peuvent manquer. Une formation complémentaire pourrait être envisagée pour combler les lacunes identifiées.</p>
                                    {% else %}
                                        <strong><i class="fas fa-exclamation-triangle me-2"></i> Correspondance faible</strong>
                                        <p>Ce candidat ne semble pas avoir la plupart des compétences requises pour ce poste. Le profil ne correspond pas aux exigences principales définies dans l'offre d'emploi.</p>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Enhance interactivity for cards
        const cards = document.querySelectorAll('.component-card');
        cards.forEach((card, index) => {
            // Custom animation delay based on index
            card.style.animationDelay = (0.2 + (index * 0.1)) + 's';
            
            // 3D hover effect
            card.addEventListener('mousemove', function(e) {
                const rect = card.getBoundingClientRect();
                const x = e.clientX - rect.left;
                const y = e.clientY - rect.top;
                const centerX = rect.width / 2;
                const centerY = rect.height / 2;
                
                const angleX = (y - centerY) / 30;
                const angleY = (centerX - x) / 30;
                
                card.style.transform = `perspective(1000px) rotateX(${angleX}deg) rotateY(${angleY}deg) scale3d(1.02, 1.02, 1.02)`;
            });
            
            card.addEventListener('mouseleave', function() {
                card.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) scale3d(1, 1, 1)';
            });
        });
        
        // Animate progress bar on load
        const progressBar = document.querySelector('.progress-bar');
        if (progressBar) {
            progressBar.style.width = '0%';
            setTimeout(() => {
                progressBar.style.width = '{{ matchPercentage }}%';
            }, 300);
        }
        
        // Add ripple effect to buttons
        const buttons = document.querySelectorAll('.btn, .back-button, .document-btn');
        buttons.forEach(button => {
            button.addEventListener('click', function(e) {
                const x = e.clientX - e.target.getBoundingClientRect().left;
                const y = e.clientY - e.target.getBoundingClientRect().top;
                
                const ripple = document.createElement('span');
                ripple.style.cssText = `
                    position: absolute;
                    background: rgba(255, 255, 255, 0.7);
                    border-radius: 50%;
                    width: 5px;
                    height: 5px;
                    top: ${y}px;
                    left: ${x}px;
                    transform: translate(-50%, -50%);
                    animation: ripple 0.6s cubic-bezier(0.16, 1, 0.3, 1) forwards;
                    pointer-events: none;
                `;
                
                this.style.position = 'relative';
                this.style.overflow = 'hidden';
                this.appendChild(ripple);
                
                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });
    });
    
    // Add necessary keyframes
    const style = document.createElement('style');
    style.textContent = `
        @keyframes ripple {
            0% {
                width: 5px;
                height: 5px;
                opacity: 1;
            }
            100% {
                width: 300px;
                height: 300px;
                opacity: 0;
            }
        }
    `;
    document.head.appendChild(style);
</script>
{% endblock %}