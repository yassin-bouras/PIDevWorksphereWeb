{% extends '/dashboard/base2.html.twig' %}

{% block title %}Traduction de CV - {{ offre.titre }}{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    /* Enterprise Design System Variables */
    :root {
        /* Core Color Palette */
        --primary-color: #33ccc5;
        --primary-dark: #2a9d8f;
        --primary-light: #a8e4e0;
        --primary-gradient: linear-gradient(135deg, #33ccc5, #1a7b75);
        --secondary-color: #4361ee;
        --secondary-dark: #3a56d4;
        --secondary-light: #c7d0ff;
        --secondary-gradient: linear-gradient(135deg, #4361ee, #3a56d4);
        --success-color: #10b981;
        --success-gradient: linear-gradient(135deg, #10b981, #059669);
        --danger-color: #ef4444;
        --danger-gradient: linear-gradient(135deg, #ef4444, #dc2626);
        --warning-color: #f59e0b;
        --info-color: #3b82f6;
        --info-gradient: linear-gradient(135deg, #3b82f6, #1d4ed8);

        /* Text Colors */
        --text-dark: #1e293b;
        --text-medium: #475569;
        --text-light: #64748b;
        --text-muted: #94a3b8;

        /* Background Colors */
        --bg-white: #ffffff;
        --bg-light: #f8fafc;
        --bg-light-hover: #f1f5f9;
        --bg-accent: #ecfdf5;

        /* Shadow System */
        --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.05);
        --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.06), 0 2px 4px -1px rgba(0, 0, 0, 0.04);
        --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.08), 0 4px 6px -2px rgba(0, 0, 0, 0.04);
        --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.02);
        --shadow-inner: inset 0 2px 4px 0 rgba(0, 0, 0, 0.04);
        --shadow-focus: 0 0 0 3px rgba(51, 204, 197, 0.4);

        /* Border Radius */
        --radius-sm: 0.25rem;
        --radius-md: 0.5rem;
        --radius-lg: 0.75rem;
        --radius-xl: 1rem;
        --radius-2xl: 1.5rem;
        --radius-full: 9999px;

        /* Spacing */
        --space-1: 0.25rem;
        --space-2: 0.5rem;
        --space-3: 0.75rem;
        --space-4: 1rem;
        --space-5: 1.25rem;
        --space-6: 1.5rem;
        --space-8: 2rem;
        --space-10: 2.5rem;
        --space-12: 3rem;
        --space-16: 4rem;

        /* Animation */
        --animation-fast: 0.15s ease;
        --animation-base: 0.3s ease;
        --animation-slow: 0.5s ease;
        --animation-timing: cubic-bezier(0.16, 1, 0.3, 1);
        --animation-bounce: cubic-bezier(0.34, 1.56, 0.64, 1);

        /* Font System */
        --font-weight-normal: 400;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --font-weight-extrabold: 800;
    }

    /* Page Layout */
    .page-container {
        max-width: 1440px;
        margin: 0 auto;
        position: relative;
        z-index: 10;
    }

    /* Back button */
    .back-button {
        position: relative;
        background-color: var(--bg-white);
        color: var(--primary-color);
        border: none;
        border-radius: var(--radius-md);
        padding: var(--space-3) var(--space-5);
        font-weight: var(--font-weight-semibold);
        transition: all var(--animation-base) var(--animation-timing);
        display: inline-flex;
        align-items: center;
        margin-bottom: var(--space-4);
        box-shadow: var(--shadow-md);
        text-decoration: none;
        overflow: hidden;
    }

    .back-button:hover {
        background-color: var(--bg-light-hover);
        transform: translateX(-5px);
        box-shadow: var(--shadow-lg);
        color: var(--primary-dark);
        text-decoration: none;
    }

    .back-button:focus {
        outline: none;
        box-shadow: var(--shadow-focus);
    }

    .back-button::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 3px;
        background: var(--primary-gradient);
        transform: scaleX(0);
        transform-origin: left;
        transition: transform var(--animation-base) var(--animation-bounce);
    }

    .back-button:hover::after {
        transform: scaleX(1);
    }

    .back-button i {
        margin-right: var(--space-2);
        transition: transform var(--animation-base) var(--animation-timing);
    }

    .back-button:hover i {
        transform: translateX(-3px);
    }

    /* Main Card */
    .translate-card {
        border: none;
        border-radius: var(--radius-xl);
        overflow: hidden;
        box-shadow: var(--shadow-xl);
        transition: all var(--animation-base) var(--animation-timing);
        transform: translateY(20px);
        opacity: 0;
        animation: fadeInUp 0.8s var(--animation-bounce) forwards;
    }

    @keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .translate-card .card-header {
        background: var(--primary-gradient);
        color: white;
        padding: var(--space-5) var(--space-6);
        border: none;
        position: relative;
        overflow: hidden;
    }

    .translate-card .card-header::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        background-image: url("data:image/svg+xml,%3Csvg width='52' height='26' viewBox='0 0 52 26' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Cpath d='M10 10c0-2.21-1.79-4-4-4-3.314 0-6-2.686-6-6h2c0 2.21 1.79 4 4 4 3.314 0 6 2.686 6 6 0 2.21 1.79 4 4 4 3.314 0 6 2.686 6 6 0 2.21 1.79 4 4 4v2c-3.314 0-6-2.686-6-6 0-2.21-1.79-4-4-4-3.314 0-6-2.686-6-6zm25.464-1.95l8.486 8.486-1.414 1.414-8.486-8.486 1.414-1.414z' /%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
        opacity: 0.3;
        z-index: 0;
    }

    .translate-card .card-header h2 {
        font-weight: var(--font-weight-bold);
        margin: 0;
        position: relative;
        z-index: 1;
        text-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

    .translate-card .card-body {
        padding: var(--space-6);
        background-color: var(--bg-white);
    }

    /* Component Cards */
    .component-card {
        border: none;
        border-radius: var(--radius-lg);
        overflow: hidden;
        box-shadow: var(--shadow-md);
        transition: all var(--animation-base) var(--animation-timing);
        height: 100%;
        transform: translateY(15px);
        opacity: 0;
        animation: fadeInComponent 0.5s var(--animation-bounce) forwards;
    }

    .component-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-lg);
    }

    @keyframes fadeInComponent {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Staggered animations for component cards */
    .component-card:nth-child(1) {
        animation-delay: 0.2s;
    }

    .component-card:nth-child(2) {
        animation-delay: 0.4s;
    }

    .component-card .card-header {
        padding: var(--space-4) var(--space-5);
        border: none;
        position: relative;
        overflow: hidden;
    }

    .component-card .card-header h3,
    .component-card .card-header h4 {
        margin: 0;
        font-weight: var(--font-weight-bold);
        position: relative;
        z-index: 1;
    }

    .component-card .card-body {
        padding: var(--space-5);
    }

    /* Card headers with different colors */
    .info-header {
        background: var(--info-gradient);
    }

    .success-header {
        background: var(--success-gradient);
    }

    .primary-header {
        background: var(--primary-gradient);
    }

    /* Form Controls */
    .form-group {
        margin-bottom: var(--space-4);
    }

    .form-control {
        border-radius: var(--radius-md);
        border: 1px solid rgba(0, 0, 0, 0.1);
        padding: var(--space-3) var(--space-4);
        font-size: 1rem;
        transition: all var(--animation-base);
        box-shadow: var(--shadow-sm);
    }

    .form-control:focus {
        outline: none;
        border-color: var(--primary-color);
        box-shadow: var(--shadow-focus);
    }

    select.form-control {
        appearance: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23475569' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right var(--space-3) center;
        background-size: 16px;
        padding-right: var(--space-8);
    }

    /* Buttons */
    .btn {
        padding: var(--space-3) var(--space-5);
        border-radius: var(--radius-md);
        font-weight: var(--font-weight-semibold);
        transition: all var(--animation-base) var(--animation-timing);
        position: relative;
        overflow: hidden;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border: none;
        cursor: pointer;
        box-shadow: var(--shadow-md);
    }

    .btn:focus {
        outline: none;
        box-shadow: var(--shadow-focus);
    }

    .btn:active {
        transform: scale(0.98);
    }

    .btn i {
        margin-right: var(--space-2);
        transition: transform var(--animation-base);
    }

    .btn:hover i {
        transform: translateY(-2px);
    }

    .btn-primary {
        background: var(--primary-gradient);
        color: white;
    }

    .btn-primary:hover {
        box-shadow: var(--shadow-lg);
        transform: translateY(-2px);
    }

    .btn-secondary {
        background: var(--secondary-gradient);
        color: white;
    }

    .btn-secondary:hover {
        box-shadow: var(--shadow-lg);
        transform: translateY(-2px);
    }

    .btn-outline-primary {
        background: transparent;
        color: var(--primary-color);
        border: 1px solid var(--primary-color);
    }

    .btn-outline-primary:hover {
        background: rgba(51, 204, 197, 0.1);
        transform: translateY(-2px);
    }

    /* Custom CV button hover effect */
    .btn-outline-primary.cv-view-btn {
        border: 1px solid var(--info-color);
        color: var(--info-color);
        transition: all 0.3s var(--animation-bounce);
        background: transparent;
        position: relative;
        overflow: hidden;
    }

    .btn-outline-primary.cv-view-btn:hover {
        background: var(--info-gradient);
        color: white;
        border-color: transparent;
        transform: translateY(-3px);
        box-shadow: 0 6px 15px rgba(59, 130, 246, 0.3);
    }

    .btn-outline-primary.cv-view-btn:hover i {
        transform: translateY(-2px) scale(1.2);
        animation: pulse 1s infinite alternate;
    }

    @keyframes pulse {
        from {
            transform: translateY(-2px) scale(1);
        }

        to {
            transform: translateY(-2px) scale(1.2);
        }
    }

    .btn-outline-primary.cv-view-btn::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(45deg,
                rgba(59, 130, 246, 0.2) 0%,
                rgba(59, 130, 246, 0.1) 30%,
                rgba(255, 255, 255, 0.4) 50%,
                rgba(59, 130, 246, 0.1) 70%,
                rgba(59, 130, 246, 0.2) 100%);
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: -1;
        transform: translateX(-100%);
    }

    .btn-outline-primary.cv-view-btn:hover::after {
        opacity: 1;
        transform: translateX(100%);
        transition: transform 0.8s ease;
    }

    .btn-outline-success {
        background: transparent;
        color: var(--success-color);
        border: 1px solid var(--success-color);
    }

    .btn-outline-success:hover {
        background: rgba(16, 185, 129, 0.1);
        transform: translateY(-2px);
    }

    /* Enhanced Translate Button */
    .btn-primary.translate-btn {
        background: linear-gradient(135deg, #33ccc5, #1a7b75);
        color: white;
        transition: all 0.3s var(--animation-bounce);
        position: relative;
        overflow: hidden;
    }

    .btn-primary.translate-btn:hover {
        background: linear-gradient(135deg, #2ab8b2, #1a8f89);
        transform: translateY(-3px);
        box-shadow: 0 6px 15px rgba(42, 184, 178, 0.4);
    }

    .btn-primary.translate-btn:hover i {
        transform: translateY(-2px) rotate(15deg);
        animation: floatIcon 1s infinite alternate;
    }

    @keyframes floatIcon {
        from {
            transform: translateY(-2px) rotate(0deg);
        }

        to {
            transform: translateY(-4px) rotate(15deg);
        }
    }

    .btn-primary.translate-btn::before {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background: linear-gradient(45deg,
                #33ccc5,
                transparent 40%,
                transparent 60%,
                #33ccc5);
        border-radius: inherit;
        z-index: -1;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .btn-primary.translate-btn:hover::before {
        opacity: 1;
        animation: rotate 2s linear infinite;
    }

    .btn-primary.translate-btn::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(45deg,
                rgba(255, 255, 255, 0) 0%,
                rgba(255, 255, 255, 0.1) 30%,
                rgba(255, 255, 255, 0.5) 50%,
                rgba(255, 255, 255, 0.1) 70%,
                rgba(255, 255, 255, 0) 100%);
        opacity: 0;
        transform: translateX(-100%);
        transition: opacity 0.3s ease;
    }

    .btn-primary.translate-btn:hover::after {
        opacity: 1;
        transform: translateX(100%);
        transition: transform 0.8s ease;
    }

    @keyframes rotate {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    /* Alerts */
    .alert {
        border: none;
        border-radius: var(--radius-lg);
        padding: var(--space-4) var(--space-5);
        margin-bottom: var(--space-5);
        position: relative;
        overflow: hidden;
        transition: all var(--animation-base);
        transform: translateY(10px);
        opacity: 0;
        animation: alertFadeIn 0.5s var(--animation-bounce) forwards;
    }

    @keyframes alertFadeIn {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .alert i {
        margin-right: var(--space-2);
    }

    .alert-danger {
        background: linear-gradient(135deg, #fee2e2, #fecaca);
        color: #b91c1c;
        box-shadow: 0 4px 12px rgba(239, 68, 68, 0.2);
    }

    .alert-success {
        background: linear-gradient(135deg, #d1fae5, #a7f3d0);
        color: #065f46;
        box-shadow: 0 4px 12px rgba(16, 185, 129, 0.2);
    }

    .alert-warning {
        background: linear-gradient(135deg, #fef3c7, #fde68a);
        color: #92400e;
        box-shadow: 0 4px 12px rgba(245, 158, 11, 0.2);
    }

    /* Translation Result Card */
    .translated-content {
        background-color: var(--bg-light);
        border-radius: var(--radius-lg);
        padding: var(--space-5);
        font-family: 'Arial', sans-serif;
        line-height: 1.6;
        max-height: 500px;
        overflow-y: auto;
        position: relative;
        box-shadow: var(--shadow-inner);
        transition: all var(--animation-base);
        font-size: 1rem;
        color: var(--text-dark);
    }

    .translated-content::-webkit-scrollbar {
        width: 8px;
    }

    .translated-content::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.05);
        border-radius: var(--radius-full);
    }

    .translated-content::-webkit-scrollbar-thumb {
        background: rgba(51, 204, 197, 0.5);
        border-radius: var(--radius-full);
    }

    .translated-content::-webkit-scrollbar-thumb:hover {
        background: rgba(51, 204, 197, 0.7);
    }

    /* Action Buttons for Translation Result */
    .action-buttons {
        display: flex;
        gap: var(--space-3);
        margin-top: var(--space-4);
    }

    .action-buttons .btn {
        flex: 1;
    }

    /* Tooltip System */
    [data-tooltip] {
        position: relative;
    }

    [data-tooltip]::before {
        content: attr(data-tooltip);
        position: absolute;
        top: -35px;
        left: 50%;
        transform: translateX(-50%) translateY(10px);
        background: var(--primary-gradient);
        color: white;
        padding: 6px 12px;
        border-radius: var(--radius-md);
        font-size: 12px;
        font-weight: var(--font-weight-medium);
        white-space: nowrap;
        pointer-events: none;
        opacity: 0;
        transition: all 0.3s var(--animation-timing);
        z-index: 100;
        box-shadow: var(--shadow-md);
    }

    [data-tooltip]::after {
        content: '';
        position: absolute;
        top: -12px;
        left: 50%;
        transform: translateX(-50%) translateY(10px);
        border-width: 6px;
        border-style: solid;
        border-color: var(--primary-dark) transparent transparent transparent;
        pointer-events: none;
        opacity: 0;
        transition: all 0.3s var(--animation-timing);
        z-index: 100;
    }

    [data-tooltip]:hover::before,
    [data-tooltip]:hover::after {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
        animation: tooltipPulse 2s infinite;
    }

    @keyframes tooltipPulse {
        0% {
            box-shadow: 0 5px 15px rgba(17, 46, 45, 0);
        }

        50% {
            box-shadow: 0 5px 15px rgba(16, 250, 238, 0.3);
        }

        100% {
            box-shadow: 0 5px 15px rgba(51, 204, 197, 0);
        }
    }

    /* Loading indicator */
    .loading {
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 3px solid rgba(255, 255, 255, .3);
        border-radius: 50%;
        border-top-color: white;
        animation: spin 1s ease-in-out infinite;
        margin-right: var(--space-2);
    }

    @keyframes spin {
        to {
            transform: rotate(360deg);
        }
    }

    /* CV Icon Styles */
    .cv-icon {
        display: inline-flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 80px;
        height: 100px;
        background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        border-radius: 8px;
        box-shadow: var(--shadow-md);
        position: relative;
        border: 2px solid var(--info-color);
        margin-bottom: var(--space-3);
    }

    .cv-icon::before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        border-width: 0 16px 16px 0;
        border-style: solid;
        border-color: #d1d5db transparent;
    }

    .cv-icon-text {
        font-weight: bold;
        margin-top: 5px;
        color: var(--text-dark);
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
        .component-card {
            margin-bottom: var(--space-4);
        }

        .action-buttons {
            flex-direction: column;
        }
    }

    /********************************************************/

    /* Typewriter Loading Animation */
    .typewriter {
        --blue: #5cbbff;
        --blue-dark: #162d72;
        --key: #fff;
        --paper: #eef0fd;
        --text: #00000049;
        --tool: #ffbb00;
        --duration: 3s;
        position: relative;
        -webkit-animation: bounce05 var(--duration) linear infinite;
        animation: bounce05 var(--duration) linear infinite;
        margin: 50px auto;
        max-width: 120px;
        /* Remove display: none so it will respect the JavaScript setting */
    }

    .typewriter .slide {
        width: 92px;
        height: 20px;
        border-radius: 3px;
        margin-left: 14px;
        transform: translateX(14px);
        background: linear-gradient(var(--blue), var(--blue-dark));
        -webkit-animation: slide05 var(--duration) ease infinite;
        animation: slide05 var(--duration) ease infinite;
    }

    .typewriter .slide:before,
    .typewriter .slide:after,
    .typewriter .slide i:before {
        content: "";
        position: absolute;
        background: var(--tool);
    }

    .typewriter .slide:before {
        width: 2px;
        height: 8px;
        top: 6px;
        left: 100%;
    }

    .typewriter .slide:after {
        left: 94px;
        top: 3px;
        height: 14px;
        width: 6px;
        border-radius: 3px;
    }

    .typewriter .slide i {
        display: block;
        position: absolute;
        right: 100%;
        width: 6px;
        height: 4px;
        top: 4px;
        background: var(--tool);
    }

    .typewriter .slide i:before {
        right: 100%;
        top: -2px;
        width: 4px;
        border-radius: 2px;
        height: 14px;
    }

    .typewriter .paper {
        position: absolute;
        left: 24px;
        top: -26px;
        width: 40px;
        height: 46px;
        border-radius: 5px;
        background: var(--paper);
        transform: translateY(46px);
        -webkit-animation: paper05 var(--duration) linear infinite;
        animation: paper05 var(--duration) linear infinite;
    }

    .typewriter .paper:before {
        content: "";
        position: absolute;
        left: 6px;
        right: 6px;
        top: 7px;
        border-radius: 2px;
        height: 4px;
        transform: scaleY(0.8);
        background: var(--text);
        box-shadow: 0 12px 0 var(--text), 0 24px 0 var(--text), 0 36px 0 var(--text);
    }

    .typewriter .keyboard {
        width: 120px;
        height: 56px;
        margin-top: -10px;
        z-index: 1;
        position: relative;
    }

    .typewriter .keyboard:before,
    .typewriter .keyboard:after {
        content: "";
        position: absolute;
    }

    .typewriter .keyboard:before {
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border-radius: 7px;
        background: linear-gradient(135deg, var(--blue), var(--blue-dark));
        transform: perspective(10px) rotateX(2deg);
        transform-origin: 50% 100%;
    }

    .typewriter .keyboard:after {
        left: 2px;
        top: 25px;
        width: 11px;
        height: 4px;
        border-radius: 2px;
        box-shadow: 15px 0 0 var(--key), 30px 0 0 var(--key), 45px 0 0 var(--key),
            60px 0 0 var(--key), 75px 0 0 var(--key), 90px 0 0 var(--key),
            22px 10px 0 var(--key), 37px 10px 0 var(--key), 52px 10px 0 var(--key),
            60px 10px 0 var(--key), 68px 10px 0 var(--key), 83px 10px 0 var(--key);
        -webkit-animation: keyboard05 var(--duration) linear infinite;
        animation: keyboard05 var(--duration) linear infinite;
    }

    @keyframes bounce05 {

        85%,
        92%,
        100% {
            transform: translateY(0);
        }

        89% {
            transform: translateY(-4px);
        }

        95% {
            transform: translateY(2px);
        }
    }

    @keyframes slide05 {
        5% {
            transform: translateX(14px);
        }

        15%,
        30% {
            transform: translateX(6px);
        }

        40%,
        55% {
            transform: translateX(0);
        }

        65%,
        70% {
            transform: translateX(-4px);
        }

        80%,
        89% {
            transform: translateX(-12px);
        }

        100% {
            transform: translateX(14px);
        }
    }

    @keyframes paper05 {
        5% {
            transform: translateY(46px);
        }

        20%,
        30% {
            transform: translateY(34px);
        }

        40%,
        55% {
            transform: translateY(22px);
        }

        65%,
        70% {
            transform: translateY(10px);
        }

        80%,
        85% {
            transform: translateY(0);
        }

        92%,
        100% {
            transform: translateY(46px);
        }
    }

    @keyframes keyboard05 {

        5%,
        12%,
        21%,
        30%,
        39%,
        48%,
        57%,
        66%,
        75%,
        84% {
            box-shadow: 15px 0 0 var(--key), 30px 0 0 var(--key), 45px 0 0 var(--key),
                60px 0 0 var(--key), 75px 0 0 var(--key), 90px 0 0 var(--key),
                22px 10px 0 var(--key), 37px 10px 0 var(--key), 52px 10px 0 var(--key),
                60px 10px 0 var(--key), 68px 10px 0 var(--key), 83px 10px 0 var(--key);
        }

        9% {
            box-shadow: 15px 2px 0 var(--key), 30px 0 0 var(--key), 45px 0 0 var(--key),
                60px 0 0 var(--key), 75px 0 0 var(--key), 90px 0 0 var(--key),
                22px 10px 0 var(--key), 37px 10px 0 var(--key), 52px 10px 0 var(--key),
                60px 10px 0 var(--key), 68px 10px 0 var(--key), 83px 10px 0 var(--key);
        }

        18% {
            box-shadow: 15px 0 0 var(--key), 30px 0 0 var(--key), 45px 0 0 var(--key),
                60px 2px 0 var(--key), 75px 0 0 var(--key), 90px 0 0 var(--key),
                22px 10px 0 var(--key), 37px 10px 0 var(--key), 52px 10px 0 var(--key),
                60px 10px 0 var(--key), 68px 10px 0 var(--key), 83px 10px 0 var(--key);
        }

        27% {
            box-shadow: 15px 0 0 var(--key), 30px 0 0 var(--key), 45px 0 0 var(--key),
                60px 0 0 var(--key), 75px 0 0 var(--key), 90px 0 0 var(--key),
                22px 12px 0 var(--key), 37px 10px 0 var(--key), 52px 10px 0 var(--key),
                60px 10px 0 var(--key), 68px 10px 0 var(--key), 83px 10px 0 var(--key);
        }

        36% {
            box-shadow: 15px 0 0 var(--key), 30px 0 0 var(--key), 45px 0 0 var(--key),
                60px 0 0 var(--key), 75px 0 0 var(--key), 90px 0 0 var(--key),
                22px 10px 0 var(--key), 37px 10px 0 var(--key), 52px 12px 0 var(--key),
                60px 12px 0 var(--key), 68px 12px 0 var(--key), 83px 10px 0 var(--key);
        }

        45% {
            box-shadow: 15px 0 0 var(--key), 30px 0 0 var(--key), 45px 0 0 var(--key),
                60px 0 0 var(--key), 75px 0 0 var(--key), 90px 2px 0 var(--key),
                22px 10px 0 var(--key), 37px 10px 0 var(--key), 52px 10px 0 var(--key),
                60px 10px 0 var(--key), 68px 10px 0 var(--key), 83px 10px 0 var(--key);
        }

        54% {
            box-shadow: 15px 0 0 var(--key), 30px 2px 0 var(--key), 45px 0 0 var(--key),
                60px 0 0 var(--key), 75px 0 0 var(--key), 90px 0 0 var(--key),
                22px 10px 0 var(--key), 37px 10px 0 var(--key), 52px 10px 0 var(--key),
                60px 10px 0 var(--key), 68px 10px 0 var(--key), 83px 10px 0 var(--key);
        }

        63% {
            box-shadow: 15px 0 0 var(--key), 30px 0 0 var(--key), 45px 0 0 var(--key),
                60px 0 0 var(--key), 75px 0 0 var(--key), 90px 0 0 var(--key),
                22px 10px 0 var(--key), 37px 10px 0 var(--key), 52px 10px 0 var(--key),
                60px 10px 0 var(--key), 68px 10px 0 var(--key), 83px 12px 0 var(--key);
        }

        72% {
            box-shadow: 15px 0 0 var(--key), 30px 0 0 var(--key), 45px 2px 0 var(--key),
                60px 0 0 var(--key), 75px 0 0 var(--key), 90px 0 0 var(--key),
                22px 10px 0 var(--key), 37px 10px 0 var(--key), 52px 10px 0 var(--key),
                60px 10px 0 var(--key), 68px 10px 0 var(--key), 83px 10px 0 var(--key);
        }

        81% {
            box-shadow: 15px 0 0 var(--key), 30px 0 0 var(--key), 45px 0 0 var(--key),
                60px 0 0 var(--key), 75px 0 0 var(--key), 90px 0 0 var(--key),
                22px 10px 0 var(--key), 37px 12px 0 var(--key), 52px 10px 0 var(--key),
                60px 10px 0 var(--key), 68px 10px 0 var(--key), 83px 10px 0 var(--key);
        }
    }

    /* Update the translation loading wrapper */
    .translation-loading-wrapper {
        position: relative;
        background: rgba(255, 255, 255, 0.9);
        border-radius: var(--radius-lg);
        padding: 30px;
        margin: 30px 0;
        text-align: center;
        box-shadow: var(--shadow-lg);
        display: none;
        /* Hidden by default */
        animation: fadeIn 0.5s ease forwards;
    }

    .translation-loading-title {
        font-weight: var(--font-weight-bold);
        color: var(--text-dark);
        margin-bottom: 15px;
        font-size: 1.2rem;
    }

    .translation-loading-subtitle {
        color: var(--text-medium);
        margin-top: 20px;
        font-size: 0.9rem;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>
{% endblock %}

{% block content %}
<div class="container page-container" style="margin-top: -53%;">
    <a href="{{ path('app_offre_candidatures', {'id_offre': offre.id_offre}) }}" class="back-button"
        data-tooltip="Retourner aux candidatures">
        <i class="fas fa-arrow-left"></i> Retour aux candidatures
    </a>

    <div class="translate-card card shadow-lg mb-5">
        <div class="card-header">
            <h2 class="mb-0 text-center">Traduction de CV - {{ offre.titre }}</h2>
        </div>
        <div class="card-body">
            <div class="row mb-5">
                <div class="col-md-6 mb-4 mb-md-0">
                    <div class="component-card card">
                        <div class="card-header info-header text-white">
                            <h3 class="mb-0"><i class="fas fa-file-alt me-2"></i> CV Original</h3>
                        </div>
                        <div class="card-body">
                            {% if cvPath %}
                            <div class="text-center mb-4">
                                <div class="cv-icon">
                                    <i class="fas fa-file-alt" style="font-size: 40px; color: var(--info-color);"></i>
                                    <div class="cv-icon-text">CV</div>
                                </div>
                                <p class="mb-4">Le CV du candidat est disponible pour traduction.</p>
                                <a href="{{ asset('uploads/' ~ cvPath) }}" target="_blank"
                                    class="btn btn-outline-primary cv-view-btn" data-tooltip="Voir le CV original">
                                    <i class="fas fa-file-pdf"></i> Consulter le CV
                                </a>
                            </div>
                            {% else %}
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                CV non disponible pour la traduction
                            </div>
                            {% endif %}
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="component-card card">
                        <div class="card-header success-header text-white">
                            <h3 class="mb-0"><i class="fas fa-language me-2"></i> Options de traduction</h3>
                        </div>
                        <div class="card-body">
                            <form method="POST"
                                action="{{ path('app_offre_translate_cv', {'id_offre': offre.id_offre, 'id_candidature': candidature.id_candidature}) }}"
                                id="translationForm">
                                <div class="form-group">
                                    <label for="language" class="form-label fw-semibold mb-2">Sélectionnez la langue
                                        cible</label>
                                    <select name="language" id="language" class="form-control">
                                        <option value="">Choisir une langue</option>
                                        {% for key, label in languages %}
                                        <option value="{{ key }}" {% if targetLanguage==key %}selected{% endif %}>{{
                                            label }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                                <div class="mt-3">
                                    <button type="submit" class="btn btn-primary translate-btn w-100" id="translateBtn"
                                        data-tooltip="Lancer la traduction">
                                        <i class="fas fa-language"></i> Traduire
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Translation Loading Animation -->
            <div class="translation-loading-wrapper" id="translationLoadingWrapper">
                <div class="translation-loading-title">Traduction en cours...</div>
                <div class="typewriter">
                    <div class="slide"><i></i></div>
                    <div class="paper"></div>
                    <div class="keyboard"></div>
                </div>
                <div class="translation-loading-subtitle">Nous traduisons votre document. Veuillez patienter quelques
                    instants...</div>
            </div>

            {% if error %}
            <div class="alert alert-danger">
                <i class="fas fa-exclamation-circle"></i> {{ error }}
            </div>
            {% endif %}

            {% if success and translatedContent %}
            <div class="component-card card mt-5">
                <div class="card-header primary-header text-white">
                    <h3 class="mb-0">
                        <i class="fas fa-check-circle me-2"></i> Résultat de la traduction - {{
                        languages[targetLanguage] }}
                    </h3>
                </div>
                <div class="card-body bg-light">
                    <div class="translated-content">
                        {{ translatedContent|nl2br }}
                    </div>
                    <div class="action-buttons">
                        <button class="btn btn-outline-primary" onclick="window.print()"
                            data-tooltip="Imprimer la traduction">
                            <i class="fas fa-print"></i> Imprimer
                        </button>
                        <button class="btn btn-outline-success" onclick="copyToClipboard()"
                            data-tooltip="Copier le texte">
                            <i class="fas fa-copy"></i> Copier
                        </button>
                        <a href="{{ path('app_offre_candidatures', {'id_offre': offre.id_offre}) }}"
                            class="btn btn-secondary" data-tooltip="Retourner aux candidatures">
                            <i class="fas fa-arrow-left"></i> Retour
                        </a>
                    </div>
                </div>
            </div>
            {% endif %}
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Enhance interactivity for cards
        const cards = document.querySelectorAll('.component-card');
        cards.forEach((card, index) => {
            // Custom animation delay based on index
            card.style.animationDelay = (0.2 + (index * 0.1)) + 's';

            // 3D hover effect
            card.addEventListener('mousemove', function (e) {
                const rect = card.getBoundingClientRect();
                const x = e.clientX - rect.left;
                const y = e.clientY - rect.top;
                const centerX = rect.width / 2;
                const centerY = rect.height / 2;

                const angleX = (y - centerY) / 30;
                const angleY = (centerX - x) / 30;

                card.style.transform = `perspective(1000px) rotateX(${angleX}deg) rotateY(${angleY}deg) scale3d(1.02, 1.02, 1.02)`;
            });

            card.addEventListener('mouseleave', function () {
                card.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) scale3d(1, 1, 1)';
            });
        });

        // Add ripple effect to buttons
        const buttons = document.querySelectorAll('.btn, .back-button');
        buttons.forEach(button => {
            button.addEventListener('click', function (e) {
                const x = e.clientX - e.target.getBoundingClientRect().left;
                const y = e.clientY - e.target.getBoundingClientRect().top;

                const ripple = document.createElement('span');
                ripple.style.cssText = `
                    position: absolute;
                    background: rgba(255, 255, 255, 0.7);
                    border-radius: 50%;
                    width: 5px;
                    height: 5px;
                    top: ${y}px;
                    left: ${x}px;
                    transform: translate(-50%, -50%);
                    animation: ripple 0.6s cubic-bezier(0.16, 1, 0.3, 1) forwards;
                    pointer-events: none;
                `;

                this.style.position = 'relative';
                this.style.overflow = 'hidden';
                this.appendChild(ripple);

                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });

        // Add loading indicator when submitting the form
        const form = document.getElementById('translationForm');
        const translateBtn = document.getElementById('translateBtn');
        const loadingWrapper = document.getElementById('translationLoadingWrapper');
        const typewriterElement = document.querySelector('.typewriter');

        if (form && translateBtn) {
            form.addEventListener('submit', function (e) {
                // Check if the language is selected
                const languageSelect = document.getElementById('language');
                if (!languageSelect.value) {
                    e.preventDefault();
                    alert('Veuillez sélectionner une langue cible.');
                    return;
                }
                // Prevent immediate submission to show animation
                e.preventDefault();

                translateBtn.innerHTML = '<span class="loading"></span> Traduction en cours...';
                translateBtn.disabled = true;

                // Show the typewriter animation
                loadingWrapper.style.display = 'block';
                // typewriterElement.style.display = 'block'; // Make typewriter visible

                // Scroll to the animation
                setTimeout(() => {
                    loadingWrapper.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }, 100);

                // Submit the form after a slight delay to allow animations to be seen
                setTimeout(() => {
                    this.submit();
                }, 2500);
            });
        }
    });

    // Copy to clipboard function
    function copyToClipboard() {
        const translatedContent = document.querySelector('.translated-content').innerText;
        navigator.clipboard.writeText(translatedContent).then(function () {
            // Create and show a toast notification
            const toast = document.createElement('div');
            toast.style.cssText = `
                position: fixed;
                bottom: 20px;
                right: 20px;
                background: var(--success-gradient);
                color: white;
                padding: 12px 20px;
                border-radius: var(--radius-md);
                box-shadow: var(--shadow-lg);
                z-index: 1000;
                opacity: 0;
                transform: translateY(20px);
                transition: all 0.3s var(--animation-bounce);
            `;
            toast.innerHTML = '<i class="fas fa-check-circle me-2"></i> Texte copié dans le presse-papier!';
            document.body.appendChild(toast);

            // Animate toast in
            setTimeout(() => {
                toast.style.opacity = '1';
                toast.style.transform = 'translateY(0)';
            }, 10);

            // Animate toast out and remove
            setTimeout(() => {
                toast.style.opacity = '0';
                toast.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    document.body.removeChild(toast);
                }, 300);
            }, 3000);
        }, function () {
            alert("Échec de la copie. Veuillez réessayer.");
        });
    }

    // Add necessary keyframes
    const style = document.createElement('style');
    style.textContent = `
        @keyframes ripple {
            0% {
                width: 5px;
                height: 5px;
                opacity: 1;
            }
            100% {
                width: 300px;
                height: 300px;
                opacity: 0;
            }
        }
    `;
    document.head.appendChild(style);
</script>
{% endblock %}