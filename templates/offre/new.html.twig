{% extends '/dashboard/base2.html.twig' %}

{% block content %}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        function getCookie(name) {
            const cookieArray = document.cookie.split('; ');
            const cookie = cookieArray.find(row => row.startsWith(name + '='));
            return cookie ? decodeURIComponent(cookie.split('=')[1]) : null;
        }

        async function fetchUserData() {
            try {
                const token = getCookie('BEARER');
                if (!token) {
                    console.error('No token found in cookies');
                    return;
                }

                const response = await fetch('/jwt/user', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ token })
                });

                const data = await response.json();

                if (data.success) {
                    const user = data.user;
                    console.log('User:', user);

                    const userIdField = document.querySelector('#user-id-field');
                    const userNameField = document.querySelector('#user-name-field');
                    const userNameDisplay = document.querySelector('#user-name-display');

                    if (userIdField) {
                        userIdField.value = user.id;
                    }
                    if (userNameField) {
                        userNameField.value = user.nom + ' ' + user.prenom;
                    }
                    if (userNameDisplay) {
                        userNameDisplay.textContent = user.nom + ' ' + user.prenom;
                    }

                    document.getElementById('offre-form-wrapper').style.display = 'block';
                } else {
                    console.error('Failed to fetch user data:', data.error);
                }
            } catch (error) {
                console.error('Error fetching user data:', error);
            }
        }

        fetchUserData();
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.querySelector('.needs-validation');
        const dateLimiteInput = document.querySelector('#offre_date_limite');
        const userIdField = document.querySelector('#user-id-field');

        function validateDateLimite() {
            const selectedDate = new Date(dateLimiteInput.value);
            const today = new Date();
            today.setHours(0, 0, 0, 0);

            if (selectedDate <= today) {
                dateLimiteInput.setCustomValidity('La date limite doit être postérieure à aujourd\'hui.');
                dateLimiteInput.classList.add('is-invalid');
                let feedback = dateLimiteInput.parentElement.querySelector('.invalid-feedback');
                if (!feedback) {
                    feedback = document.createElement('div');
                    feedback.className = 'invalid-feedback';
                    dateLimiteInput.parentElement.appendChild(feedback);
                }
                feedback.textContent = 'La date limite doit être postérieure à aujourd\'hui.';
            } else {
                dateLimiteInput.setCustomValidity('');
                dateLimiteInput.classList.remove('is-invalid');
            }
        }

        dateLimiteInput.addEventListener('change', validateDateLimite);

        form.addEventListener('submit', function (event) {
            validateDateLimite();

            if (!userIdField.value) {
                event.preventDefault();
                alert('Impossible de soumettre : ID utilisateur introuvable.');
                return;
            }

            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
        }, false);
    });
</script>

<div class="content container-fluid" style="margin-top: -58%;">
    <div class="row">
        <div class="col-xl-12 col-sm-12 col-12">
            <div class="breadcrumb-path mb-4">
                <ul class="breadcrumb">
                    <li class="breadcrumb-item"><a href="{{ path('app_dashboard_manager') }}">Accueil</a></li>
                    <li class="breadcrumb-item"><a href="{{ path('app_offre_index') }}">Offres</a></li>
                    <li class="breadcrumb-item active">Nouvelle Offre</li>
                </ul>
                <h3>Créer une offre</h3>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h2 class="card-titles">Offre</h2>
        </div>
        <div class="card-body">
            <div id="offre-form-wrapper" style="display: none;">
                {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}

                <!-- Hidden field for user ID -->
                <input type="hidden" id="user-id-field" name="user_id" value="">

                <!-- Hidden field for user full name -->
                <input type="hidden" id="user-name-field" name="user_name" value="">

                <!-- Optional: Display the user name -->
                <div class="alert alert-info">
                    Utilisateur connecté : <strong id="user-name-display">Chargement...</strong>
                     Utilisateur id : <strong id="user-id-field ">Chargement...</strong>
                </div>

                <div class="styled-form-wrapper">
                    {{ form_row(form.titre) }}
                    {{ form_row(form.description) }}
                    {{ form_row(form.type_contrat) }}
                    {{ form_row(form.salaire) }}
                    {{ form_row(form.lieu_travail) }}
                    {{ form_row(form.date_limite) }}
                    {{ form_row(form.statut_offre) }}
                    {{ form_row(form.experience) }}
                </div>

                <div class="form-actions mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Enregistrer
                    </button>
                    {% if context == 'front' %}
                        <a href="{{ path('app_offre_front_index') }}" class="btn btn-secondary">
                            <i class="fas fa-times"></i> Annuler
                        </a>
                    {% else %}
                        <a href="{{ path('app_offre_index') }}" class="btn btn-secondary">
                            <i class="fas fa-times"></i> Annuler
                        </a>
                    {% endif %}
                </div>

                {{ form_end(form) }}
            </div>
        </div>
    </div>
</div>

{% endblock %}
