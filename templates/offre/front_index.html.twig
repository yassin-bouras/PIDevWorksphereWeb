{% extends '/home/index.html.twig' %}
{% block title %}Offres{% endblock %}

{% block body %}
<div class="wrapper">
    <div class="inner" style="--quantity: 10;">
        {% for i in 0..9 %}
        <div class="card"
            style="--index: {{ i }}; --color-card: {% set colors = ['142, 249, 252', '142, 252, 204', '142, 252, 157', '215, 252, 142', '252, 252, 142', '252, 208, 142', '252, 142, 142', '252, 142, 239', '204, 142, 252', '142, 202, 252'] %}{{ colors[i] }}">
            <div class="img"></div>
        </div>
        {% endfor %}
    </div>
</div>

<div class="container" style="margin-top:-35%;">
    <!-- <h1 class="text-center mb-5" style="font-weight: 600; color: #333; margin-bottom: 30px;">Liste des Offres</h1> -->
    <div style="margin-bottom: 100px;">
        <h1 class="text-center mb-5" style="font-weight: 700; color: #333;">LISTE DES OFFRES</h1>
    </div>

    <div class="mb-4">
        <form method="GET" action="{{ path('app_offre_front_index') }}">
            <div class="filters-wrapper"
                style="display: flex; flex-wrap: wrap; gap: 5px; justify-content: center; margin-bottom: 15px;">
                <!-- Contract Type Filter -->
                <div class="filter-container" style="max-width: 700px; margin: 8px 30px 15px 0; display: inline-block;">
                    <label for="contract_type" style="font-weight: 600; color: #333; margin-left: -10px;">Filtrer par
                        type
                        de contrat :</label>
                    <div class="custom-select-wrapper">
                        <select name="contract_type" id="contract_type" class="form-select"
                            style="max-width: 350px; display: inline-block;">
                            <option value="">Tous les types</option>
                            <option value="CDI" {% if contract_type is defined and contract_type=='CDI' %}selected{%
                                endif %}>CDI</option>
                            <option value="CDD" {% if contract_type is defined and contract_type=='CDD' %}selected{%
                                endif %}>CDD</option>
                            <option value="Stage" {% if contract_type is defined and contract_type=='Stage' %}selected{%
                                endif %}>Stage</option>
                            <option value="Freelance" {% if contract_type is defined and contract_type=='Freelance'
                                %}selected{% endif %}>Freelance</option>
                            <option value="Alternance" {% if contract_type is defined and contract_type=='Alternance'
                                %}selected{% endif %}>Alternance</option>
                        </select>
                    </div>
                </div>
                <div class="filter-container" style="max-width: 500px; margin: 8px 0 15px 30px; display: inline-block;">
                    <label for="sort_by" style="font-weight: 600; color: #333; margin-right: -1px;">Trier par :</label>
                    <div class="custom-select-wrapper">
                        <select name="sort_by" id="sort_by" class="form-select"
                            style="max-width: 350px; display: inline-block;">
                            <option value="">Par défaut</option>
                            <option value="date_pub_asc" {% if sort_by is defined and sort_by=='date_pub_asc' %}selected{% endif %}>Date de publication (croissant)</option>
                            <option value="date_pub_desc" {% if sort_by is defined and sort_by=='date_pub_desc' %}selected{% endif %}>Date de publication (décroissant)</option>
                            <option value="date_lim_asc" {% if sort_by is defined and sort_by=='date_lim_asc' %}selected{% endif %}>Date limite (croissant)</option>
                            <option value="date_lim_desc" {% if sort_by is defined and sort_by=='date_lim_desc' %}selected{% endif %}>Date limite (décroissant)</option>
                        </select>
                    </div>
                </div>
                <div class="input-group" style="max-width: 1050px; margin: 0 auto;">
                    <input type="text" name="search" class="form-control" placeholder="Rechercher par titre d'offre..."
                        value="{{ search|default('') }}"> <!-- Keep the search term in the input -->
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" type="submit">Recherche</button>
                    </div>
                </div>
        </form>
    </div>

    <div class="row" style="display: flex; flex-wrap: wrap; gap: 20px; justify-content: center;">
        {% for offre in offres %}
        {% set hasApplied = userApplications[offre.idOffre] ?? false %}
        <div class="flip-card" style="margin-top: 30px;">
            <div class="flip-card-inner {% if hasApplied %}already-applied{% endif %}" {% if not hasApplied
                %}onclick="window.location.href='{{ path('app_candidature_new', {'offre_id': offre.idOffre}) }}'" {%
                endif %}>
                <div class="flip-card-front">
                    <p class="title">{{ offre.titre }}</p>
                    <p><strong>Type:</strong> {{ offre.typeContrat }}</p>
                    <p><strong>Lieu:</strong> {{ offre.lieuTravail }}</p>
                    <p><strong>Salaire:</strong> {{ offre.salaire }}</p>
                    <p><strong>Exp:</strong> {{ offre.experience }}</p>
                    <p><strong>Date de publication:</strong> {{ offre.datePublication ?
                        offre.datePublication|date('Y-m-d') : '' }}</p>
                    <p><strong>Date Limite:</strong> {{ offre.dateLimite ? offre.dateLimite|date('Y-m-d') : '' }}</p>
                    <p><strong>Status:</strong> {{ offre.statutOffre }}</p>
                    {% if hasApplied %}
                    <p class="applied-badge">Déjà postulé</p>
                    {% endif %}
                </div>
                <div class="flip-card-back">
                    <p style="max-height: 320px; overflow-y: auto; text-align: justify;">
                        <strong>DESC : </strong> {{ offre.description }}
                    </p>

                    <div style="margin-top: 10px;">
                        {% if hasApplied %}
                        <span class="already-applied-text">Vous avez déjà postulé à cette offre</span>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
        {% else %}
        <p class="text-center" style="font-size: 1.2rem; color: #777;">Aucune offre trouvée.</p>
        {% endfor %}
    </div>
</div>
<link href="https://fonts.googleapis.com/css2?family=Roboto&family=Montserrat:wght@400;700&display=swap"
    rel="stylesheet">

<style>
    html,
    body {
        height: 100%;
    }

    /* Animation CSS */
    .wrapper {
        width: 100%;
        height: 100%;
        position: relative;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

    .inner {
        --w: 60px;
        --h: 90px;
        --translateZ: calc((var(--w) + var(--h)) + 0px);
        --rotateX: -15deg;
        --perspective: 1000px;
        position: absolute;
        width: var(--w);
        height: var(--h);
        top: 22%;
        left: calc(25% - (var(--w) / 2) - 2.5px);
        z-index: 2;
        transform-style: preserve-3d;
        transform: perspective(var(--perspective));
        animation: rotating 20s linear infinite;
        pointer-events: none;
    }

    @keyframes rotating {
        from {
            transform: perspective(var(--perspective)) rotateX(var(--rotateX)) rotateY(0);
        }

        to {
            transform: perspective(var(--perspective)) rotateX(var(--rotateX)) rotateY(1turn);
        }
    }

    .card {
        position: absolute;
        border: 2px solid rgba(var(--color-card));
        border-radius: 12px;
        overflow: hidden;
        inset: 0;
        transform: rotateY(calc((360deg / var(--quantity)) * var(--index))) translateZ(var(--translateZ));
    }

    .img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        background: #0000 radial-gradient(circle,
                rgba(var(--color-card), 0.2) 0%,
                rgba(var(--color-card), 0.6) 80%,
                rgba(var(--color-card), 0.9) 100%);
    }

    .flip-card {
        position: relative;
        background-color: transparent;
        width: 380px;
        height: 460px;
        perspective: 1000px;
        font-family: sans-serif;
        border-radius: 10px;
    }

    .flip-card::before {
        content: '';
        position: absolute;
        inset: 0;
        left: -5px;
        margin: auto;
        width: 300px;
        height: 480px;
        border-radius: 12px;
        background: rgb(135, 135, 222);

        /* background: linear-gradient(-45deg, #e81cff 0%, #40c9ff 100%); */
        /* background: linear-gradient(-45deg, gold 0%, silver 100%); */
        z-index: -10;
        pointer-events: none;
        transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    .flip-card::after {
        content: '';
        z-index: -1;
        position: absolute;
        inset: 0;
        background: rgb(0, 0, 128);

        /* background: linear-gradient(-45deg, #fc00ff 0%, #00dbde 100%); */
        /* background: linear-gradient(-45deg, gold 0%, silver 100%); */

        transform: translate3d(0, 0, 0) scale(0.95);
        filter: blur(20px);
        border-radius: 12px;
    }

    .flip-card:hover::before {
        transform: rotate(-90deg) scaleX(1.34) scaleY(0.77);
    }

    .flip-card:hover::after {
        filter: blur(30px);
    }

    .flip-card:hover {
        margin-bottom: 30px;
        /* ou plus selon l'espace que tu veux */
    }

    .flip-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        transition: transform 0.8s;
        transform-style: preserve-3d;
        border-radius: 10px;
        cursor: pointer;
    }

    .flip-card:hover .flip-card-inner {
        transform: rotateY(180deg) scaleY(1.07);
    }

    /* Styles pour les offres déjà postulées */
    .flip-card-inner.already-applied {
        opacity: 0.8;
        cursor: default;
    }

    .applied-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: #bfe3f9;
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        font-weight: bold;
        font-size: 14px;
        z-index: 10;
    }

    .already-applied-text {
        display: inline-block;
        background-color: #87CEFA;
        color: white;
        padding: 8px 12px;
        border-radius: 5px;
        font-weight: bold;
        margin-top: 15px;
    }

    .flip-card-front,
    .flip-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        border-radius: 10px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        backface-visibility: hidden;
        padding: 18px;
        box-shadow: 0 8px 14px 0 rgba(0, 0, 0, 0.2);
        /* background-color: #ffffff; */
        /* background-image: linear-gradient(to right, #3b82f6, #8b5cf6, #ec4899); */
        /* background-image: linear-gradient(-45deg, #fc00ff 0%, #00dbde 100%); */
        background-image: linear-gradient(-45deg, #98d8ff 0%, #c68fc6 100%);
        color: white;
    }

    .flip-card-front {
        z-index: 2;
    }

    .flip-card-back {
        transform: rotateY(180deg);
        z-index: 1;
        transition: transform 0.4s ease;
    }

    .flip-card-back {
        overflow-y: auto;
        /* Ajoute une barre de scroll si le texte dépasse */
        max-height: 100%;
        /* Empêche de dépasser la hauteur de la carte */
    }


    /* .title {
        font-size: 1.8rem;
        font-weight: bold;
        margin-bottom: 10px;
    } */
    .flip-card-front .title {
        font-size: 1.8rem;
        font-weight: bold;
        /* Le titre reste en gras */
        margin-bottom: 10px;
    }

    .flip-card p {
        font-size: 17px;
        font-weight: normal;
    }

    .flip-card-front p.title {
        font-weight: bold;
    }

    .flip-card p:last-child {
        color: #3312ed;
        font-weight: 600;
    }


    .btn {
        background-color: #40c9ff;
        color: white;
        padding: 6px 12px;
        border-radius: 5px;
        text-decoration: none;
        margin: 5px;
        font-size: 14px;
    }

    .btn:hover {
        background-color: #e81cff;
        transform: translateY(-2px);
    }

    .flip-card-front p,
    .flip-card-back p,
    .flip-card-front strong,
    .flip-card-back strong {
        color: #000000;
    }


    .flip-card-front {
        font-family: 'Montserrat', sans-serif;
    }

    .flip-card-front .title {
        font-family: 'Montserrat', sans-serif;
        font-weight: 700;
    }

    .flip-card-front p {
        font-family: 'Montserrat', sans-serif;
        font-weight: 400;
    }

    .container a.btn {
        position: relative;
        z-index: 10;
    }

    .form-control {
        border: 3px solid #4771cb;
        /* Set the border color */
        border-radius: 5px;
        /* Optional: Add rounded corners */
        padding: 10px;
        /* Optional: Add padding for better appearance */
        font-size: 1.2rem;
        /* Increase font size */
        width: 80%;
        /* Ensure the input takes up the full width of its container */
        transition: border-color 0.3s ease;
        /* Smooth transition for hover/focus */
    }

    .form-control:focus {
        border-color: #33ccc5;
        /* Keep the same color on focus */
        outline: none;
        /* Remove the default outline */
        box-shadow: 0 0 5px rgba(51, 204, 197, 0.5);
        /* Optional: Add a glow effect */
    }

    .btn-outline-secondary {
        background-color: transparent;
        /* Remove the default blue background */

        border: 3px solid #4771cb;
        /* Match the border size with the search box */
        color: #4771cb;
        /* Set the text color */
        padding: 10px 50px;
        /* Increase padding for a larger button */
        font-size: 1.39rem;
        /* Increase font size */
        border-radius: 6px;
        /* Match the rounded corners with the search box */
        /* width: 345px; */
        transition: all 0.3s ease;

    }

    .btn-outline-secondary:hover {
        border: 3px solid #30539f;

        background-color: #4771cb;
        /* Change background color on hover */
        color: white;
        /* Change text color on hover */
        transform: scale(1.08);
        /* Slightly enlarge the button on hover */
        transition: all 0.2s ease;

    }

    .input-group {
        display: flex;
        align-items: center;
        /* Ensure vertical alignment */
        justify-content: center;
        /* Center the input and button */
        gap: 0;
    }

    .filter-container {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
    }

    .custom-select-wrapper {
        position: relative;
        display: inline-block;
    }

    .form-select {
        border: 3px solid #4771cb;
        border-radius: 5px;
        padding: 10px;
        font-size: 1.1rem;
        transition: border-color 0.3s ease;
        background-color: white;
        width: 400px;
        /* Set a specific width */
        max-width: 100%;
        /* Allow it to be responsive */
    }

    .form-select:focus {
        border-color: #33ccc5;
        outline: none;
        box-shadow: 0 0 5px rgba(51, 204, 197, 0.5);
    }

    .custom-select-wrapper::after {
        content: "▼";
        font-size: 20px;
        color: #4771cb;
        position: absolute;
        right: 13px;
        top: 50%;
        transform: translateY(-40%);
        pointer-events: none;
        /* Make sure this doesn't block clicks */
    }
</style>
<script>
    // Ensure dropdown functions properly
    document.addEventListener('DOMContentLoaded', function () {
        const selectElement = document.getElementById('contract_type');

        // Force the dropdown to be clickable
        selectElement.addEventListener('mousedown', function (e) {
            e.stopPropagation();
        });

        // Automatically submit form when selection changes
        selectElement.addEventListener('change', function () {
            this.form.submit();
        });
        // Add event listener for sort_by dropdown
        const sortByElement = document.getElementById('sort_by');
        sortByElement.addEventListener('change', function () {
            this.form.submit();
        });
    });
</script>
{% endblock %}