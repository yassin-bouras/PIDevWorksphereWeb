<style>
    /* Modern color scheme */
    :root {
        --primary: #4e73df;
        --primary-light: #6f8be8;
        --primary-dark: #3756b5;
        --secondary: #858796;
        --success: #1cc88a;
        --danger: #e74a3b;
        --warning: #f6c23e;
        --info: #36b9cc;
        --light: #f8f9fc;
        --dark: #5a5c69;
        --white: #fff;
        --gray-100: #f8f9fc;
        --gray-200: #eaecf4;
        --gray-300: #dddfeb;
        --gray-800: #5a5c69;
    }

    body {
        font-family: 'Nunito', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
        background-color: var(--gray-100);
    }

    /* Card styling */
    .card {
        border: none;
        border-radius: 0.35rem;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        margin-bottom: 30px;
    }

    .card-header {
        padding: 1.25rem 1.5rem;
        border-bottom: 1px solid var(--gray-200);
        background-color: white;
        display: flex;
        align-items: center;
        justify-content: space-between;
        border-top-left-radius: 0.35rem;
        border-top-right-radius: 0.35rem;
    }

    .card-titles {
        margin: 0;
        font-weight: 700;
        color: var(--dark);
    }

    .card-titles span {
        display: block;
        font-size: 0.875rem;
        font-weight: 400;
        color: var(--secondary);
        margin-top: 0.25rem;
    }

    .card-body {
        padding: 1.5rem;
        background-color: white;
        border-bottom-left-radius: 0.35rem;
        border-bottom-right-radius: 0.35rem;
    }

    /* Form styling */
    .form-header {
        margin-bottom: 1.5rem;
        border-bottom: 1px solid var(--gray-200);
        padding-bottom: 1rem;
    }

    .form-header h2 {
        color: var(--primary);
        font-weight: 700;
        margin-bottom: 0.5rem;
        font-size: 1.5rem;
    }

    .form-header p {
        color: var(--secondary);
        margin: 0;
    }

    .form-group {
        margin-bottom: 1.5rem;
        position: relative;
    }

    .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 600;
        color: var(--gray-800);
    }

    .form-control {
        display: block;
        width: 100%;
        height: calc(1.5em + 0.75rem + 2px);
        padding: 0.75rem 1rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: var(--dark);
        background-color: var(--white);
        background-clip: padding-box;
        border: 1px solid var(--gray-300);
        border-radius: 0.35rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .form-control:focus {
        border-color: var(--primary-light);
        outline: 0;
        box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
    }

    .form-control.is-invalid {
        border-color: var(--danger);
        padding-right: calc(1.5em + 0.75rem);
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23e74a3b'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23e74a3b' stroke='none'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right calc(0.375em + 0.1875rem) center;
        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }

    .form-control:disabled, .form-control[readonly] {
        background-color: var(--gray-200);
        opacity: 1;
    }

    textarea.form-control {
        height: auto;
    }

    /* Form row and columns for side-by-side fields */
    .form-row {
        display: flex;
        flex-wrap: wrap;
        margin-right: -10px;
        margin-left: -10px;
        margin-bottom: 1.5rem;
    }

    .form-col {
        flex: 0 0 50%;
        max-width: 50%;
        padding: 0 10px;
    }

    /* Alert styling */
    .alert-danger {
        background-color: #f8d7da;
        border-color: #f5c6cb;
        color: #721c24;
        padding: 1rem;
        border-radius: 0.35rem;
        margin-bottom: 1.5rem;
        position: relative;
    }

    .alert-danger ul {
        margin-bottom: 0;
        padding-left: 1.25rem;
    }

    .alert-danger li {
        margin-bottom: 0.5rem;
    }

    .alert-danger li:last-child {
        margin-bottom: 0;
    }

    /* Button styling */
    .btn {
        display: inline-block;
        font-weight: 600;
        color: var(--gray-800);
        text-align: center;
        vertical-align: middle;
        user-select: none;
        background-color: transparent;
        border: 1px solid transparent;
        padding: 0.75rem 1.5rem;
        font-size: 1rem;
        line-height: 1.5;
        border-radius: 0.35rem;
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        cursor: pointer;
        text-decoration: none;
    }

    .btn:hover {
        transform: translateY(-1px);
    }

    .btn:active {
        transform: translateY(0);
    }

    .btn i {
        margin-right: 0.5rem;
    }

    .btn-secondary {
        color: var(--white);
        background-color: var(--secondary);
        border-color: var(--secondary);
    }

    .btn-secondary:hover {
        background-color: #717484;
        border-color: #6c757d;
    }

    .btn-apply {
        color: var(--white);
        background-color: var(--primary);
        border-color: var(--primary);
    }

    .btn-apply:hover {
        background-color: var(--primary-dark);
        border-color: #3852ab;
    }

    .form-btn {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 2rem;
    }

    /* Password strength meter */
    .password-strength-meter {
        height: 5px;
        background-color: var(--gray-200);
        margin-top: 0.5rem;
        border-radius: 2px;
        overflow: hidden;
    }

    .password-strength-meter div {
        height: 100%;
        border-radius: 2px;
        transition: width 0.3s ease;
    }

    .password-weak {
        background-color: var(--danger);
    }

    .password-medium {
        background-color: var(--warning);
    }

    .password-strong {
        background-color: var(--success);
    }

    .password-feedback {
        margin-top: 0.25rem;
        font-size: 0.875rem;
    }
    
    /* Show/hide password icon */
    .password-toggle {
        position: absolute;
        right: 10px;
        top: 38px;
        cursor: pointer;
        color: var(--secondary);
    }
    
    /* Loader for form submission */
    .loader {
        display: none;
        width: 20px;
        height: 20px;
        border: 3px solid var(--gray-200);
        border-radius: 50%;
        border-top: 3px solid var(--primary);
        animation: spin 1s linear infinite;
        margin-left: 10px;
    }
    
    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    
    /* Responsive adjustments */
    @media (max-width: 767.98px) {
        .form-row {
            flex-direction: column;
        }
        
        .form-col {
            flex: 0 0 100%;
            max-width: 100%;
        }
    }
</style>

<div class="content container-fluid">
    <div class="row">
        <div class="col-xl-12 col-sm-12 col-12">
            <a href="/login" class="btn btn-secondary mb-4">
                <i class="fas fa-arrow-left"></i> Retour
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-xl-12 col-sm-12 col-12">
            <div class="card">
                <div class="card-header">
                    <h2 class="card-titles">Créer un Utilisateur <span>Ajoutez les informations nécessaires pour créer un utilisateur</span></h2>
                </div>
                <div class="card-body">
                    <div class="container">
                        <div class="form-header">
                            <h2>Informations personnelles</h2>
                            <p>Tous les champs marqués d'un * sont obligatoires</p>
                        </div>

                        <div class="alert-danger" id="errorMessages" style="display: none;"></div>

                        {{ form_start(form, {'attr': {'id': 'userForm', 'novalidate': 'novalidate'}}) }}

                        <div class="form-row">
                            <div class="form-col">
                                <div class="form-group">
                                    {{ form_label(form.nom, 'Nom *') }}
                                    {{ form_widget(form.nom, {'attr': {'class': 'form-control', 'placeholder': 'Entrez le nom'}}) }}
                                </div>
                            </div>
                            <div class="form-col">
                                <div class="form-group">
                                    {{ form_label(form.prenom, 'Prénom *') }}
                                    {{ form_widget(form.prenom, {'attr': {'class': 'form-control', 'placeholder': 'Entrez le prénom'}}) }}
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            {{ form_label(form.email, 'Adresse e-mail *') }}
                            {{ form_widget(form.email, {'attr': {'class': 'form-control', 'placeholder': 'exemple@domaine.com'}}) }}
                        </div>

                        <div class="form-group" style="position: relative;">
                            {{ form_label(form.plainPassword, 'Mot de passe *') }}
                            {{ form_widget(form.plainPassword, {'attr': {'class': 'form-control', 'placeholder': 'Minimum 6 caractères', 'id': 'password-field'}}) }}
                            <span class="password-toggle" id="password-toggle">
                                <i class="fas fa-eye"></i>
                            </span>
                            <div class="password-strength-meter">
                                <div id="password-strength-bar" style="width: 0%"></div>
                            </div>
                            <div class="password-feedback" id="password-feedback"></div>
                        </div>

                        <div class="form-group">
                            {{ form_label(form.adresse, 'Adresse complète *') }}
                            {{ form_widget(form.adresse, {'attr': {'class': 'form-control', 'placeholder': 'Numéro, rue, code postal, ville', 'rows': 3}}) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.sexe, 'Sexe *') }}
                            {{ form_widget(form.sexe, {'attr': {'class': 'form-control'}}) }}
                        </div>
                        <div class="form-group">
                            {{ form_label(form.imageprofil, 'Photo de profil') }}
                            {{ form_widget(form.imageprofil, {'attr': {'class': 'form-control'}}) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.salaireattendu, 'Salaire attendu') }}
                            {{ form_widget(form.salaireattendu, {'attr': {'class': 'form-control'}}) }}
                        </div>

                        <div class="form-btn">
                            <a href="{{ path('app_user_index') }}" class="btn btn-secondary">
                                <i class="fas fa-times"></i> Annuler
                            </a>
                            <button type="submit" class="btn btn-apply" id="submitBtn">
                                <i class="fas fa-save"></i> {{ button_label|default('Créer l\'Utilisateur') }}
                                <span class="loader" id="formLoader"></span>
                            </button>
                        </div>

                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('userForm');
    const errorDiv = document.getElementById('errorMessages');
    const passwordField = document.getElementById('password-field');
    const passwordToggle = document.getElementById('password-toggle');
    const passwordStrengthBar = document.getElementById('password-strength-bar');
    const passwordFeedback = document.getElementById('password-feedback');
    const submitBtn = document.getElementById('submitBtn');
    const formLoader = document.getElementById('formLoader');

    // Toggle password visibility
    if (passwordToggle && passwordField) {
        passwordToggle.addEventListener('click', function() {
            const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordField.setAttribute('type', type);
            this.innerHTML = type === 'password' ? '<i class="fas fa-eye"></i>' : '<i class="fas fa-eye-slash"></i>';
        });
    }

    // Password strength meter
    if (passwordField) {
        passwordField.addEventListener('input', function() {
            const password = this.value;
            let strength = 0;
            let feedback = '';

            if (password.length >= 6) strength += 1;
            if (password.match(/[a-z]/) && password.match(/[A-Z]/)) strength += 1;
            if (password.match(/\d+/)) strength += 1;
            if (password.match(/[^a-zA-Z0-9]/)) strength += 1;

            switch (strength) {
                case 0:
                    passwordStrengthBar.className = '';
                    passwordStrengthBar.style.width = '0%';
                    passwordFeedback.textContent = '';
                    passwordFeedback.style.color = '';
                    break;
                case 1:
                    passwordStrengthBar.className = 'password-weak';
                    passwordStrengthBar.style.width = '25%';
                    passwordFeedback.textContent = 'Faible';
                    passwordFeedback.style.color = '#e74a3b';
                    break;
                case 2:
                    passwordStrengthBar.className = 'password-medium';
                    passwordStrengthBar.style.width = '50%';
                    passwordFeedback.textContent = 'Moyen';
                    passwordFeedback.style.color = '#f6c23e';
                    break;
                case 3:
                    passwordStrengthBar.className = 'password-medium';
                    passwordStrengthBar.style.width = '75%';
                    passwordFeedback.textContent = 'Bon';
                    passwordFeedback.style.color = '#4e73df';
                    break;
                case 4:
                    passwordStrengthBar.className = 'password-strong';
                    passwordStrengthBar.style.width = '100%';
                    passwordFeedback.textContent = 'Fort';
                    passwordFeedback.style.color = '#1cc88a';
                    break;
            }
        });
    }

    // Form validation
    if (form) {
        form.addEventListener('submit', function (e) {
            let valid = true;
            let messages = [];

            errorDiv.style.display = 'none';
            errorDiv.innerHTML = '';
            const inputs = form.querySelectorAll('.form-control');
            inputs.forEach(input => input.classList.remove('is-invalid'));

            const nom = form.querySelector('[name="user[nom]"]');
            if (!nom.value.trim()) {
                valid = false;
                messages.push("Le nom est obligatoire.");
                nom.classList.add('is-invalid');
            } else if (nom.value.trim().length < 2) {
                valid = false;
                messages.push("Le nom doit contenir au moins 2 caractères.");
                nom.classList.add('is-invalid');
            }

            const prenom = form.querySelector('[name="user[prenom]"]');
            if (!prenom.value.trim()) {
                valid = false;
                messages.push("Le prénom est obligatoire.");
                prenom.classList.add('is-invalid');
            } else if (prenom.value.trim().length < 2) {
                valid = false;
                messages.push("Le prénom doit contenir au moins 2 caractères.");
                prenom.classList.add('is-invalid');
            }

            const email = form.querySelector('[name="user[email]"]');
            if (!email.value.trim()) {
                valid = false;
                messages.push("L'email est obligatoire.");
                email.classList.add('is-invalid');
            } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email.value.trim())) {
                valid = false;
                messages.push("L'email n'est pas valide.");
                email.classList.add('is-invalid');
            }

            // Check if plainPassword exists (could be named differently)
            const passwordField = form.querySelector('[name="user[plainPassword]"]') || form.querySelector('[name="user[mdp]"]');
            if (passwordField) {
                if (!passwordField.value.trim()) {
                    valid = false;
                    messages.push("Le mot de passe est obligatoire.");
                    passwordField.classList.add('is-invalid');
                } else if (passwordField.value.trim().length < 6) {
                    valid = false;
                    messages.push("Le mot de passe doit contenir au moins 6 caractères.");
                    passwordField.classList.add('is-invalid');
                }
            }

            // Check if role field exists
            const role = form.querySelector('[name="user[role]"]');
            if (role) {
                if (!role.value.trim()) {
                    valid = false;
                    messages.push("Le rôle est obligatoire.");
                    role.classList.add('is-invalid');
                } else if (!['ROLE_USER', 'ROLE_ADMIN', 'ROLE_EMPLOYEE', 'ROLE_MANAGER'].includes(role.value.trim())) {
                    valid = false;
                    messages.push("Le rôle doit être l'un des suivants : ROLE_USER, ROLE_ADMIN, ROLE_EMPLOYEE, ROLE_MANAGER.");
                    role.classList.add('is-invalid');
                }
            }

            const adresse = form.querySelector('[name="user[adresse]"]');
            if (!adresse.value.trim()) {
                valid = false;
                messages.push("L'adresse est obligatoire.");
                adresse.classList.add('is-invalid');
            } else if (adresse.value.trim().length < 10) {
                valid = false;
                messages.push("L'adresse doit contenir au moins 10 caractères.");
                adresse.classList.add('is-invalid');
            }

            const sexe = form.querySelector('[name="user[sexe]"]');
            if (!sexe.value.trim()) {
                valid = false;
                messages.push("Le sexe est obligatoire.");
                sexe.classList.add('is-invalid');
            } 

            if (!valid) {
                e.preventDefault();
                errorDiv.innerHTML = '<ul>' + messages.map(msg => `<li>${msg}</li>`).join('') + '</ul>';
                errorDiv.style.display = 'block';
                window.scrollTo({ top: errorDiv.offsetTop - 20, behavior: 'smooth' });
            } else {
                // Show loading indicator
                formLoader.style.display = 'inline-block';
                submitBtn.disabled = true;
            }
        });
    }
    
    // Real-time validation feedback
    const formInputs = form.querySelectorAll('.form-control');
    formInputs.forEach(input => {
        input.addEventListener('blur', function() {
            // Clear invalid state when user starts typing again
            input.classList.remove('is-invalid');
        });
    });
});
</script>