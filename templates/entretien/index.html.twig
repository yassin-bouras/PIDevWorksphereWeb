{% extends '/dashboard/base2.html.twig' %}

{% block title %}Entretiens{% endblock %}

{% block content %}
    <div class="container" style="margin-top:-55%;">
        <div class="entretien-header">
            <h1 class="entretien-title">Gestion des Entretiens</h1>
            <p class="entretien-subtitle">Suivez et organisez tous vos entretiens en un seul endroit</p>
        </div>

        <div class="entretien-actions">
            <a href="{{ path('app_entretien_new') }}" class="btn-create">
                <i class="fas fa-plus-circle"></i> Créer un nouvel entretien
            </a>
            
            <div class="search-filter-container">
                <form method="get" action="{{ path('app_entretien_index') }}" class="search-form">
                    <div class="search-input-group">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" name="search" class="search-input" 
                               placeholder="Rechercher par titre..." 
                               value="{{ app.request.query.get('search') }}">
                        <button type="submit" class="search-button">
                            Rechercher
                        </button>
                        <a href="{{ path('app_entretien_index') }}" class="clear-button">
                            <i class="fas fa-times"></i>
                        </a>
                    </div>
                </form>

                <form method="get" action="{{ path('filtrer_entretiens') }}" class="filter-form">
                    <input type="hidden" name="page" value="1">
                    
                    <div class="filter-group">
                        <div class="date-filter">
                            <label for="start_date" class="filter-label">
                                <i class="far fa-calendar-alt"></i> Date début
                            </label>
                            <input type="date" id="start_date" name="start_date" 
                                   value="{{ app.request.query.get('start_date') }}" 
                                   class="date-input" required>
                        </div>
                        
                        <div class="date-filter">
                            <label for="end_date" class="filter-label">
                                <i class="far fa-calendar-alt"></i> Date fin
                            </label>
                            <input type="date" id="end_date" name="end_date" 
                                   value="{{ app.request.query.get('end_date') }}" 
                                   class="date-input" required>
                        </div>
                        
                        <button type="submit" class="filter-button">
                            <i class="fas fa-filter"></i> Appliquer
                        </button>
                    </div>
                </form>
            </div>
        </div>

        {% if entretiens|length > 0 %}
        <div class="entretien-grid">
            {% for entretien in entretiens %}
                <div class="entretien-card" data-status="{{ entretien.status ? 'active' : 'inactive' }}">
                    <div class="card-header">
                        <div class="card-badge">
                            <span class="badge-type">{{ entretien.typeEntretien }}</span>
                            <span class="badge-status">{{ entretien.status ? 'Confirmé' : 'En attente' }}</span>
                        </div>
                        <h3 class="card-title">{{ entretien.titre }}</h3>
                        <div class="card-date">
                            <i class="far fa-calendar"></i>
                            {{ entretien.dateEntretien ? entretien.dateEntretien|date('d M Y') : 'N/A' }}
                            <i class="far fa-clock"></i>
                            {{ entretien.heureEntretien ? entretien.heureEntretien|date('H:i') : 'N/A' }}
                        </div>
                    </div>
                    
                    <div class="card-body">
                        <p class="card-description">{{ entretien.description }}</p>
                        
                        <div class="card-assignee">
                            <div class="assignee-avatar">
                                {{ entretien.user.nom|first|upper }}{{ entretien.user.prenom|first|upper }}
                            </div>
                            <div class="assignee-info">
                                <span class="assignee-name">{{ entretien.user.nom }} {{ entretien.user.prenom }}</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="card-actions">
                        <a href="{{ path('app_entretien_show', {'id': entretien.id}) }}" class="action-btn view-btn">
                            <i class="fas fa-eye"></i> Détails
                        </a>
                        <a href="{{ path('app_entretien_edit', {'id': entretien.id}) }}" class="action-btn edit-btn">
                            <i class="fas fa-edit"></i> Modifier
                        </a>
                        <form method="post" action="{{ path('app_entretien_delete', {'id': entretien.id}) }}" 
                              onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cet entretien?');">
                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ entretien.id) }}">
                            <button type="submit" class="action-btn delete-btn">
                                <i class="fas fa-trash-alt"></i> Supprimer
                            </button>
                        </form>
                    </div>
                </div>
            {% endfor %}
        </div>
        {% else %}
        <div class="no-entretiens">
            <img src="{{ asset('images/no-data.svg') }}" alt="Aucun entretien" class="no-data-img">
            <h3>Aucun entretien trouvé</h3>
            
        </div>
        {% endif %}

        {% if entretiens|length > 0 %}
        <div class="pagination-container">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    {% if entretiens.currentPageNumber != 1 %}
                        <li class="page-item">
                            <a class="page-link" href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': entretiens.currentPageNumber-1})) }}" aria-label="Previous">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    {% else %}
                        <li class="page-item disabled">
                            <span class="page-link"><i class="fas fa-chevron-left"></i></span>
                        </li>
                    {% endif %}

                    {% for page in 1..entretiens.pageCount %}
                        <li class="page-item {% if page == entretiens.currentPageNumber %}active{% endif %}">
                            <a class="page-link" href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': page})) }}">
                                {{ page }}
                            </a>
                        </li>
                    {% endfor %}

                    {% if entretiens.currentPageNumber != entretiens.pageCount %}
                        <li class="page-item">
                            <a class="page-link" href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': entretiens.currentPageNumber+1})) }}" aria-label="Next">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    {% else %}
                        <li class="page-item disabled">
                            <span class="page-link"><i class="fas fa-chevron-right"></i></span>
                        </li>
                    {% endif %}
                </ul>
            </nav>
        </div>
        {% endif %}
    </div>

    <style>

     :root {
            --primary-color: #33ccc5;  /* Changed to your teal color */
            --secondary-color: #2aa8a2; /* Slightly darker teal */
            --accent-color: #4895ef;
            --danger-color: #f72585;
            --success-color: #4cc9f0;
            --warning-color: #6fe5b6;
            --light-color: #f8f9fa;
            --dark-color: #212529;
            --gray-color: #6c757d;
            --card-shadow: 0 10px 20px rgba(0,0,0,0.08);
            --transition: all 0.3s ease;
        }

        /* [Rest of your CSS remains the same] */

                .btn-create {
                display: inline-flex;
                align-items: center;
                padding: 0.8rem 1.5rem;
                background-color: #33ccc5 !important; /* Your teal color */
                color: white !important; /* Ensure text stays white */
                border-radius: 50px;
                text-decoration: none;
                font-weight: 500;
                transition: all 0.3s ease;
                box-shadow: 0 4px 6px rgba(51, 204, 197, 0.2);
                margin-bottom: 1.5rem;
                border: none !important; /* Remove any default button borders */
            }

            .btn-create:hover {
                background-color: #2aa8a2; /* Slightly darker teal */
                transform: translateY(-2px);
                box-shadow: 0 6px 12px rgba(51, 204, 197, 0.25);
            }

            .btn-create i {
                margin-right: 0.5rem;
                color: white !important; /* Ensure icon is white */
            }
                

        .entretien-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .entretien-header {
            text-align: center;
            margin-bottom: 3rem;
        }

        .entretien-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 0.5rem;
            background: linear-gradient(90deg, var(--primary-color), var(--accent-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .entretien-subtitle {
            font-size: 1.1rem;
            color: var(--gray-color);
        }

        .entretien-actions {
            margin-bottom: 2rem;
        }

        
        .search-filter-container {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: var(--card-shadow);
            margin-bottom: 2rem;
        }

        .search-form {
            margin-bottom: 1.5rem;
        }

        .search-input-group {
            display: flex;
            align-items: center;
            border-radius: 50px;
            overflow: hidden;
            border: 1px solid #e0e0e0;
            transition: var(--transition);
        }

        .search-input-group:focus-within {
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(72, 149, 239, 0.2);
        }

        .search-icon {
            padding: 0 1rem;
            color: var(--gray-color);
        }

        .search-input {
            flex: 1;
            border: none;
            padding: 0.8rem 0;
            font-size: 1rem;
            outline: none;
        }

        .search-button {
            padding: 0.8rem 1.5rem;
            background-color: var(--primary-color);
            color: white;
            border: none;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
        }

        .search-button:hover {
            background-color: var(--secondary-color);
        }

        .clear-button {
            padding: 0.8rem 1rem;
            background-color: #f5f5f5;
            color: var(--gray-color);
            border: none;
            cursor: pointer;
            transition: var(--transition);
        }

        .clear-button:hover {
            color: var(--danger-color);
            background-color: #f0f0f0;
        }

        .filter-form {
            margin-top: 1.5rem;
        }

        .filter-group {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
        }

        .date-filter {
            flex: 1;
            min-width: 200px;
        }

        .filter-label {
            display: block;
            margin-bottom: 0.5rem;
            color: var(--gray-color);
            font-weight: 500;
        }

        .filter-label i {
            margin-right: 0.5rem;
        }

        .date-input {
            width: 100%;
            padding: 0.8rem 1rem;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            font-size: 1rem;
            transition: var(--transition);
        }

        .date-input:focus {
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(72, 149, 239, 0.2);
            outline: none;
        }

        .filter-button {
            display: inline-flex;
            align-items: center;
            padding: 0.8rem 1.5rem;
            background-color: var(--accent-color);
            color: white;
            border: none;
            border-radius: 8px;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
            margin-top: 1.5rem;
        }

        .filter-button:hover {
            background-color: #3a7bc8;
            transform: translateY(-2px);
        }

        .filter-button i {
            margin-right: 0.5rem;
        }

        .entretien-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .entretien-card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: var(--card-shadow);
            transition: var(--transition);
            border-top: 4px solid var(--primary-color);
        }

        .entretien-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0,0,0,0.1);
        }

        .entretien-card[data-status="active"] {
            border-top-color: var(--success-color);
        }

        .entretien-card[data-status="inactive"] {
            border-top-color: var(--warning-color);
        }

        .card-header {
            padding: 1.5rem;
            border-bottom: 1px solid #f0f0f0;
        }

        .card-badge {
            display: flex;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .badge-type {
            background-color: rgba(67, 97, 238, 0.1);
            color: var(--primary-color);
            padding: 0.3rem 0.8rem;
            border-radius: 50px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .badge-status {
            background-color: rgba(76, 201, 240, 0.1);
            color: var(--success-color);
            padding: 0.3rem 0.8rem;
            border-radius: 50px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .entretien-card[data-status="inactive"] .badge-status {
            background-color: rgba(248, 150, 30, 0.1);
            color: var(--warning-color);
        }

        .card-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: var(--dark-color);
            margin-bottom: 0.5rem;
        }

        .card-date {
            display: flex;
            align-items: center;
            gap: 1rem;
            color: var(--gray-color);
            font-size: 0.9rem;
        }

        .card-date i {
            width: 16px;
            text-align: center;
        }

        .card-body {
            padding: 1.5rem;
        }

        .card-description {
            color: var(--gray-color);
            line-height: 1.6;
            margin-bottom: 1.5rem;
        }

        .card-assignee {
            display: flex;
            align-items: center;
            gap: 1rem;
            background-color: #f9f9f9;
            padding: 0.8rem;
            border-radius: 8px;
        }

        .assignee-avatar {
            width: 40px;
            height: 40px;
            background-color: var(--primary-color);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
        }

        .assignee-info {
            display: flex;
            flex-direction: column;
        }

        .assignee-name {
            font-weight: 600;
            color: var(--dark-color);
        }

        .assignee-role {
            font-size: 0.8rem;
            color: var(--gray-color);
        }

        .card-actions {
            display: flex;
            padding: 0 1.5rem 1.5rem;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .action-btn {
            display: inline-flex;
            align-items: center;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            font-size: 0.85rem;
            font-weight: 500;
            text-decoration: none;
            transition: var(--transition);
        }

        .action-btn i {
            margin-right: 0.3rem;
            font-size: 0.9rem;
        }

        .view-btn {
            background-color: rgba(67, 97, 238, 0.1);
            color: var(--primary-color);
        }

        .view-btn:hover {
            background-color: rgba(67, 97, 238, 0.2);
        }

        .edit-btn {
            background-color: rgba(76, 201, 240, 0.1);
            color: var(--success-color);
        }

        .edit-btn:hover {
            background-color: rgba(76, 201, 240, 0.2);
        }

        .delete-btn {
            background-color: rgba(247, 37, 133, 0.1);
            color: var(--danger-color);
            border: none;
            cursor: pointer;
        }

        .delete-btn:hover {
            background-color: rgba(247, 37, 133, 0.2);
        }

        .no-entretiens {
            text-align: center;
            padding: 3rem;
            background: white;
            border-radius: 12px;
            box-shadow: var(--card-shadow);
        }

        .no-data-img {
            max-width: 250px;
            margin-bottom: 1.5rem;
            opacity: 0.7;
        }

        .no-entretiens h3 {
            font-size: 1.5rem;
            color: var(--dark-color);
            margin-bottom: 0.5rem;
        }

        .no-entretiens p {
            color: var(--gray-color);
            margin-bottom: 1.5rem;
        }

        .pagination-container {
            display: flex;
            justify-content: center;
            margin-top: 2rem;
        }

        .pagination {
            display: flex;
            gap: 0.5rem;
            list-style: none;
            padding: 0;
        }

        .page-item {
            margin: 0;
        }

        .page-link {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            border-radius: 8px !important;
            color: var(--primary-color);
            font-weight: 500;
            text-decoration: none;
            transition: var(--transition);
            border: 1px solid #e0e0e0;
        }

        .page-item.active .page-link {
            background-color: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .page-item.disabled .page-link {
            color: #d0d0d0;
            pointer-events: none;
        }

        .page-link:hover {
            background-color: #f5f5f5;
        }

        @media (max-width: 768px) {
            .entretien-grid {
                grid-template-columns: 1fr;
            }
            
            .filter-group {
                flex-direction: column;
                gap: 1rem;
            }
            
            .date-filter {
                width: 100%;
            }
            
            .filter-button {
                width: 100%;
                justify-content: center;
            }
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add animation to cards when they come into view
            const cards = document.querySelectorAll('.entretien-card');
            
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = 1;
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            }, { threshold: 0.1 });
            
            cards.forEach((card, index) => {
                card.style.opacity = 0;
                card.style.transform = 'translateY(20px)';
                card.style.transition = `opacity 0.5s ease ${index * 0.1}s, transform 0.5s ease ${index * 0.1}s`;
                observer.observe(card);
            });
            
            // Add hover effect to buttons
            const buttons = document.querySelectorAll('.action-btn');
            buttons.forEach(button => {
                button.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-2px)';
                });
                button.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                });
            });
        });
    </script>
{% endblock %}