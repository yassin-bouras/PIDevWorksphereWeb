<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modifier Entretien</title>
    <style>
        :root {
            --primary-color: #2c5aa0;
            --secondary-color: #4a90e2;
            --accent-color: #ff6b35;
            --light-gray: #f5f7fa;
            --medium-gray: #e1e5eb;
            --dark-gray: #6c757d;
            --text-color: #2d3748;
            --success-color: #4caf50;
            --danger-color: #dc3545;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            color: var(--text-color);
            background-image: url('https://www.bgm0726.fr/uploads/lep_content/.thumbs/rh-5f89e-1000x_-90-scale-ffffff-wCopyright.png?1610684035');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            min-height: 100vh;
            display: flex;
            align-items: flex-start;
            justify-content: center;
        }

        .overlay {
            background: linear-gradient(135deg, rgba(44, 90, 160, 0.85) 0%, rgba(74, 144, 226, 0.85) 100%);
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }

        .container {
            width: 500px;
            max-width: 1200px;
            margin: 40px auto;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            position: relative;
            z-index: 1;
            overflow-y: visible;
            animation: fadeIn 0.5s ease-out;
        }

        h1 {
            text-align: center;
            color: var(--primary-color);
            margin-bottom: 20px;
            font-size: 1.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .form-header {
            text-align: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid var(--medium-gray);
        }

        .form-header h2 {
            font-size: 1.5rem;
            color: var(--primary-color);
            margin-bottom: 8px;
            font-weight: 500;
        }

        .form-header p {
            color: var(--dark-gray);
            font-size: 1rem;
            margin: 0;
        }

        .form-group {
            margin-bottom: 12px;
        }

        .form-group label {
            display: block;
            margin-bottom: 6px;
            font-weight: 600;
            color: var(--primary-color);
            font-size: 0.9rem;
        }

        .form-control {
            width: 80%;
            padding: 8px 12px;
            border: 2px solid var(--medium-gray);
            border-radius: 6px;
            font-size: 0.95rem;
            transition: all 0.3s ease;
            background-color: var(--light-gray);
        }

        .form-control:focus {
            border-color: var(--secondary-color);
            outline: none;
            box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.2);
            background-color: white;
        }

        .form-control.is-invalid {
            border-color: var(--danger-color);
            background-color: #fff5f5;
        }

        .btn {
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 0.95rem;
            border-radius: 6px;
            cursor: pointer;
            display: block;
            width: 100%;
            transition: all 0.3s ease;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-top: 15px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .btn:hover {
            background: linear-gradient(to right, #234a8c, #3d7bc8);
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.15);
        }

        .back-link {
            display: inline-block;
            margin-top: 15px;
            color: var(--secondary-color);
            text-decoration: none;
            font-size: 0.9rem;
            transition: all 0.2s ease;
            font-weight: 500;
            border: 1px solid var(--secondary-color);
            padding: 6px 12px;
            border-radius: 4px;
        }

        .back-link:hover {
            color: white;
            background-color: var(--secondary-color);
            text-decoration: none;
        }

        .alert-danger {
            background-color: #f8d7da;
            border: 1px solid var(--danger-color);
            color: var(--danger-color);
            padding: 12px;
            border-radius: 6px;
            margin-bottom: 20px;
            display: none;
        }

        .alert-danger ul {
            margin: 0;
            padding-left: 20px;
        }

        .alert-danger li {
            margin-bottom: 5px;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .form-row {
            display: flex;
            gap: 20px;
        }

        .form-col {
            flex: 1;
        }

        input[type="hidden"],
        select[type="hidden"],
        .hidden-field,
        .hidden-field-container {
            display: none !important;
        }
    </style>
</head>

<body>
<div class="overlay"></div>

<div class="container">
        <div class="form-header">
            <h2>Modifier l'Entretien</h2>
            <p>Mettez à jour les informations de l'entretien</p>
        </div>

        <div class="alert-danger" id="errorMessages"></div>

        {{ form_start(form, {'attr': {'id': 'entretienForm'}}) }}

        {{ form_widget(form.candidatId, {'attr': {'type': 'hidden', 'class': 'hidden-field'}}) }}
        {{ form_widget(form.offre, {'attr': {'type': 'hidden', 'class': 'hidden-field'}}) }}

        <div class="form-group">
            {{ form_label(form.titre) }}
            {{ form_widget(form.titre, {'attr': {'class': 'form-control', 'placeholder': 'Titre de l\'entretien'}}) }}
        </div>

        <div class="form-group">
            {{ form_label(form.description) }}
            {{ form_widget(form.description, {'attr': {'class': 'form-control', 'placeholder': 'Description détaillée', 'rows': '5'}}) }}
        </div>

        <div class="form-row">
            <div class="form-col">
                <div class="form-group">
                    {{ form_label(form.date_entretien) }}
                    {{ form_widget(form.date_entretien, {'attr': {'class': 'form-control'}}) }}
                </div>
            </div>
            <div class="form-col">
                <div class="form-group">
                    {{ form_label(form.heureentretien) }}
                    {{ form_widget(form.heureentretien, {'attr': {'class': 'form-control'}}) }}
                </div>
            </div>
        </div>

        <div class="form-group">
            {{ form_label(form.type_entretien) }}
            {{ form_widget(form.type_entretien, {'attr': {'class': 'form-control', 'placeholder': 'Type d\'entretien'}}) }}
        </div>

        <div class="form-group" style="display: flex; align-items: center; gap: 10px;">
            {{ form_label(form.status, null, {'label_attr': {'style': 'margin-bottom: 0'}}) }}
            {{ form_widget(form.status, {'attr': {'class': 'form-check-input'}}) }}
        </div>

        <div class="form-group">
            {{ form_label(form.user) }}
            {{ form_widget(form.user, {'attr': {'class': 'form-control'}}) }}
        </div>

       

        <button type="submit" class="btn">Enregistrer</button>

        {{ form_end(form) }}

        <a href="{{ path('app_entretien_index') }}" class="back-link">← Retour à la liste</a>
    </div>





<script>
document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('entretienForm');
    const errorDiv = document.getElementById('errorMessages');

    form.addEventListener('submit', function (e) {
        let valid = true;
        let messages = [];

        errorDiv.style.display = 'none';
        errorDiv.innerHTML = '';
        const inputs = form.querySelectorAll('.form-control');
        inputs.forEach(input => input.classList.remove('is-invalid'));

        const titre = form.querySelector('[name$="[titre]"]');
        if (!titre.value.trim()) {
            valid = false;
            messages.push("Le titre est obligatoire.");
            titre.classList.add('is-invalid');
        } else if (titre.value.trim().length < 5) {
            valid = false;
            messages.push("Le titre doit contenir au moins 5 caractères.");
            titre.classList.add('is-invalid');
        }

        const description = form.querySelector('[name$="[description]"]');
        if (!description.value.trim()) {
            valid = false;
            messages.push("La description est obligatoire.");
            description.classList.add('is-invalid');
        } else if (description.value.trim().length < 10) {
            valid = false;
            messages.push("La description doit contenir au moins 10 caractères.");
            description.classList.add('is-invalid');
        }

        const dateEntretien = form.querySelector('[name$="[date_entretien]"]');
        if (!dateEntretien.value) {
            valid = false;
            messages.push("La date de l'entretien est obligatoire.");
            dateEntretien.classList.add('is-invalid');
        } else {
            const selectedDate = new Date(dateEntretien.value);
            const today = new Date();
            today.setHours(0, 0, 0, 0);
            if (selectedDate < today) {
                valid = false;
                messages.push("La date de l'entretien doit être aujourd'hui ou dans le futur.");
                dateEntretien.classList.add('is-invalid');
            }
        }

        const heureEntretien = form.querySelector('[name$="[heureentretien]"]');
        if (!heureEntretien.value) {
            valid = false;
            messages.push("L'heure de l'entretien est obligatoire.");
            heureEntretien.classList.add('is-invalid');
        }

        const typeEntretien = form.querySelector('[name$="[type_entretien]"]');
        if (!typeEntretien.value.trim()) {
            valid = false;
            messages.push("Le type d'entretien est obligatoire.");
            typeEntretien.classList.add('is-invalid');
        }

        

        const user = form.querySelector('[name$="[user]"]');
        if (!user.value) {
            valid = false;
            messages.push("L'employé est obligatoire.");
            user.classList.add('is-invalid');
        }


        if (!valid) {
            e.preventDefault();
            errorDiv.innerHTML = '<ul>' + messages.map(msg => `<li>${msg}</li>`).join('') + '</ul>';
            errorDiv.style.display = 'block';
            window.scrollTo({ top: errorDiv.offsetTop - 20, behavior: 'smooth' });
        }
    });
});

const hiddenFields = form.querySelectorAll('input[type="hidden"], select[type="hidden"]');
hiddenFields.forEach(field => {
    field.style.display = 'none';
    field.parentElement.style.display = 'none';
});
const hiddenFields = form.querySelectorAll('[name="entretien[candidatId]"], [name="entretien[offre]"], .hidden-field-container');
</script>
</body>
</html>